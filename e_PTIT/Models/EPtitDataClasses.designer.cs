#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace e_PTIT.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ptit")]
	public partial class EPtitDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdministrators(Administrators instance);
    partial void UpdateAdministrators(Administrators instance);
    partial void DeleteAdministrators(Administrators instance);
    partial void InsertRiddle(Riddle instance);
    partial void UpdateRiddle(Riddle instance);
    partial void DeleteRiddle(Riddle instance);
    partial void InsertAnswer(Answer instance);
    partial void UpdateAnswer(Answer instance);
    partial void DeleteAnswer(Answer instance);
    partial void InsertStoryContent(StoryContent instance);
    partial void UpdateStoryContent(StoryContent instance);
    partial void DeleteStoryContent(StoryContent instance);
    partial void InsertStory(Story instance);
    partial void UpdateStory(Story instance);
    partial void DeleteStory(Story instance);
    partial void InsertContentTemplate(ContentTemplate instance);
    partial void UpdateContentTemplate(ContentTemplate instance);
    partial void DeleteContentTemplate(ContentTemplate instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertMagazineEdition(MagazineEdition instance);
    partial void UpdateMagazineEdition(MagazineEdition instance);
    partial void DeleteMagazineEdition(MagazineEdition instance);
    partial void InsertProverb(Proverb instance);
    partial void UpdateProverb(Proverb instance);
    partial void DeleteProverb(Proverb instance);
    partial void InsertProverbContent(ProverbContent instance);
    partial void UpdateProverbContent(ProverbContent instance);
    partial void DeleteProverbContent(ProverbContent instance);
    partial void InsertHumorContent(HumorContent instance);
    partial void UpdateHumorContent(HumorContent instance);
    partial void DeleteHumorContent(HumorContent instance);
    partial void InsertHumor(Humor instance);
    partial void UpdateHumor(Humor instance);
    partial void DeleteHumor(Humor instance);
    partial void InsertWriteAnswerGame(WriteAnswerGame instance);
    partial void UpdateWriteAnswerGame(WriteAnswerGame instance);
    partial void DeleteWriteAnswerGame(WriteAnswerGame instance);
    partial void InsertSelectOneGameAnswer(SelectOneGameAnswer instance);
    partial void UpdateSelectOneGameAnswer(SelectOneGameAnswer instance);
    partial void DeleteSelectOneGameAnswer(SelectOneGameAnswer instance);
    partial void InsertSelectOneGame(SelectOneGame instance);
    partial void UpdateSelectOneGame(SelectOneGame instance);
    partial void DeleteSelectOneGame(SelectOneGame instance);
    partial void InsertMatchingGameQuestion(MatchingGameQuestion instance);
    partial void UpdateMatchingGameQuestion(MatchingGameQuestion instance);
    partial void DeleteMatchingGameQuestion(MatchingGameQuestion instance);
    partial void InsertMatchingGameAnswer(MatchingGameAnswer instance);
    partial void UpdateMatchingGameAnswer(MatchingGameAnswer instance);
    partial void DeleteMatchingGameAnswer(MatchingGameAnswer instance);
    partial void InsertGroupToGameInter(GroupToGameInter instance);
    partial void UpdateGroupToGameInter(GroupToGameInter instance);
    partial void DeleteGroupToGameInter(GroupToGameInter instance);
    partial void InsertFindDifferenceGameAnswer(FindDifferenceGameAnswer instance);
    partial void UpdateFindDifferenceGameAnswer(FindDifferenceGameAnswer instance);
    partial void DeleteFindDifferenceGameAnswer(FindDifferenceGameAnswer instance);
    partial void InsertGameGroup(GameGroup instance);
    partial void UpdateGameGroup(GameGroup instance);
    partial void DeleteGameGroup(GameGroup instance);
    partial void InsertMatchingGame(MatchingGame instance);
    partial void UpdateMatchingGame(MatchingGame instance);
    partial void DeleteMatchingGame(MatchingGame instance);
    partial void InsertFindDifferenceGame(FindDifferenceGame instance);
    partial void UpdateFindDifferenceGame(FindDifferenceGame instance);
    partial void DeleteFindDifferenceGame(FindDifferenceGame instance);
    #endregion
		
		public EPtitDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ptitConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EPtitDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EPtitDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EPtitDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EPtitDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrators> Administrators
		{
			get
			{
				return this.GetTable<Administrators>();
			}
		}
		
		public System.Data.Linq.Table<Riddle> Riddles
		{
			get
			{
				return this.GetTable<Riddle>();
			}
		}
		
		public System.Data.Linq.Table<Answer> Answers
		{
			get
			{
				return this.GetTable<Answer>();
			}
		}
		
		public System.Data.Linq.Table<StoryContent> StoryContents
		{
			get
			{
				return this.GetTable<StoryContent>();
			}
		}
		
		public System.Data.Linq.Table<Story> Stories
		{
			get
			{
				return this.GetTable<Story>();
			}
		}
		
		public System.Data.Linq.Table<ContentTemplate> ContentTemplates
		{
			get
			{
				return this.GetTable<ContentTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<MagazineEdition> MagazineEditions
		{
			get
			{
				return this.GetTable<MagazineEdition>();
			}
		}
		
		public System.Data.Linq.Table<Proverb> Proverbs
		{
			get
			{
				return this.GetTable<Proverb>();
			}
		}
		
		public System.Data.Linq.Table<ProverbContent> ProverbContents
		{
			get
			{
				return this.GetTable<ProverbContent>();
			}
		}
		
		public System.Data.Linq.Table<HumorContent> HumorContents
		{
			get
			{
				return this.GetTable<HumorContent>();
			}
		}
		
		public System.Data.Linq.Table<Humor> Humors
		{
			get
			{
				return this.GetTable<Humor>();
			}
		}
		
		public System.Data.Linq.Table<WriteAnswerGame> WriteAnswerGames
		{
			get
			{
				return this.GetTable<WriteAnswerGame>();
			}
		}
		
		public System.Data.Linq.Table<SelectOneGameAnswer> SelectOneGameAnswers
		{
			get
			{
				return this.GetTable<SelectOneGameAnswer>();
			}
		}
		
		public System.Data.Linq.Table<SelectOneGame> SelectOneGames
		{
			get
			{
				return this.GetTable<SelectOneGame>();
			}
		}
		
		public System.Data.Linq.Table<MatchingGameQuestion> MatchingGameQuestions
		{
			get
			{
				return this.GetTable<MatchingGameQuestion>();
			}
		}
		
		public System.Data.Linq.Table<MatchingGameAnswer> MatchingGameAnswers
		{
			get
			{
				return this.GetTable<MatchingGameAnswer>();
			}
		}
		
		public System.Data.Linq.Table<GroupToGameInter> GroupToGameInters
		{
			get
			{
				return this.GetTable<GroupToGameInter>();
			}
		}
		
		public System.Data.Linq.Table<FindDifferenceGameAnswer> FindDifferenceGameAnswers
		{
			get
			{
				return this.GetTable<FindDifferenceGameAnswer>();
			}
		}
		
		public System.Data.Linq.Table<GameGroup> GameGroups
		{
			get
			{
				return this.GetTable<GameGroup>();
			}
		}
		
		public System.Data.Linq.Table<MatchingGame> MatchingGames
		{
			get
			{
				return this.GetTable<MatchingGame>();
			}
		}
		
		public System.Data.Linq.Table<FindDifferenceGame> FindDifferenceGames
		{
			get
			{
				return this.GetTable<FindDifferenceGame>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrator")]
	public partial class Administrators : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkadminId;
		
		private string _userName;
		
		private string _password;
		
		private System.DateTime _createdOn;
		
		private bool _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkadminIdChanging(int value);
    partial void OnpkadminIdChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public Administrators()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkadminId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkadminId
		{
			get
			{
				return this._pkadminId;
			}
			set
			{
				if ((this._pkadminId != value))
				{
					this.OnpkadminIdChanging(value);
					this.SendPropertyChanging();
					this._pkadminId = value;
					this.SendPropertyChanged("pkadminId");
					this.OnpkadminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Riddle")]
	public partial class Riddle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkRiddleId;
		
		private string _Name;
		
		private string _Question;
		
		private string _Answer;
		
		private System.Nullable<int> _fkAnswerId;
		
		private System.Nullable<int> _fkEditionId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<System.DateTime> _PublishedOn;
		
		private EntityRef<Answer> _Answer1;
		
		private EntityRef<MagazineEdition> _MagazineEdition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkRiddleIdChanging(int value);
    partial void OnpkRiddleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnfkAnswerIdChanging(System.Nullable<int> value);
    partial void OnfkAnswerIdChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnPublishedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedOnChanged();
    #endregion
		
		public Riddle()
		{
			this._Answer1 = default(EntityRef<Answer>);
			this._MagazineEdition = default(EntityRef<MagazineEdition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkRiddleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkRiddleId
		{
			get
			{
				return this._pkRiddleId;
			}
			set
			{
				if ((this._pkRiddleId != value))
				{
					this.OnpkRiddleIdChanging(value);
					this.SendPropertyChanging();
					this._pkRiddleId = value;
					this.SendPropertyChanged("pkRiddleId");
					this.OnpkRiddleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(1000)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(4000)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkAnswerId", DbType="Int")]
		public System.Nullable<int> fkAnswerId
		{
			get
			{
				return this._fkAnswerId;
			}
			set
			{
				if ((this._fkAnswerId != value))
				{
					if (this._Answer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkAnswerIdChanging(value);
					this.SendPropertyChanging();
					this._fkAnswerId = value;
					this.SendPropertyChanged("fkAnswerId");
					this.OnfkAnswerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					if (this._MagazineEdition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedOn
		{
			get
			{
				return this._PublishedOn;
			}
			set
			{
				if ((this._PublishedOn != value))
				{
					this.OnPublishedOnChanging(value);
					this.SendPropertyChanging();
					this._PublishedOn = value;
					this.SendPropertyChanged("PublishedOn");
					this.OnPublishedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Riddle", Storage="_Answer1", ThisKey="fkAnswerId", OtherKey="pkAnswerId", IsForeignKey=true)]
		public Answer Answer1
		{
			get
			{
				return this._Answer1.Entity;
			}
			set
			{
				Answer previousValue = this._Answer1.Entity;
				if (((previousValue != value) 
							|| (this._Answer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer1.Entity = null;
						previousValue.Riddles.Remove(this);
					}
					this._Answer1.Entity = value;
					if ((value != null))
					{
						value.Riddles.Add(this);
						this._fkAnswerId = value.pkAnswerId;
					}
					else
					{
						this._fkAnswerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Answer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Riddle", Storage="_MagazineEdition", ThisKey="fkEditionId", OtherKey="pkEditionId", IsForeignKey=true)]
		public MagazineEdition MagazineEdition
		{
			get
			{
				return this._MagazineEdition.Entity;
			}
			set
			{
				MagazineEdition previousValue = this._MagazineEdition.Entity;
				if (((previousValue != value) 
							|| (this._MagazineEdition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineEdition.Entity = null;
						previousValue.Riddles.Remove(this);
					}
					this._MagazineEdition.Entity = value;
					if ((value != null))
					{
						value.Riddles.Add(this);
						this._fkEditionId = value.pkEditionId;
					}
					else
					{
						this._fkEditionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MagazineEdition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Answer")]
	public partial class Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkAnswerId;
		
		private string _ContentText;
		
		private System.Nullable<int> _fkRiddleId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private EntitySet<Riddle> _Riddles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkAnswerIdChanging(int value);
    partial void OnpkAnswerIdChanged();
    partial void OnContentTextChanging(string value);
    partial void OnContentTextChanged();
    partial void OnfkRiddleIdChanging(System.Nullable<int> value);
    partial void OnfkRiddleIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    #endregion
		
		public Answer()
		{
			this._Riddles = new EntitySet<Riddle>(new Action<Riddle>(this.attach_Riddles), new Action<Riddle>(this.detach_Riddles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkAnswerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkAnswerId
		{
			get
			{
				return this._pkAnswerId;
			}
			set
			{
				if ((this._pkAnswerId != value))
				{
					this.OnpkAnswerIdChanging(value);
					this.SendPropertyChanging();
					this._pkAnswerId = value;
					this.SendPropertyChanged("pkAnswerId");
					this.OnpkAnswerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentText", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string ContentText
		{
			get
			{
				return this._ContentText;
			}
			set
			{
				if ((this._ContentText != value))
				{
					this.OnContentTextChanging(value);
					this.SendPropertyChanging();
					this._ContentText = value;
					this.SendPropertyChanged("ContentText");
					this.OnContentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkRiddleId", DbType="Int")]
		public System.Nullable<int> fkRiddleId
		{
			get
			{
				return this._fkRiddleId;
			}
			set
			{
				if ((this._fkRiddleId != value))
				{
					this.OnfkRiddleIdChanging(value);
					this.SendPropertyChanging();
					this._fkRiddleId = value;
					this.SendPropertyChanged("fkRiddleId");
					this.OnfkRiddleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Riddle", Storage="_Riddles", ThisKey="pkAnswerId", OtherKey="fkAnswerId")]
		public EntitySet<Riddle> Riddles
		{
			get
			{
				return this._Riddles;
			}
			set
			{
				this._Riddles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Riddles(Riddle entity)
		{
			this.SendPropertyChanging();
			entity.Answer1 = this;
		}
		
		private void detach_Riddles(Riddle entity)
		{
			this.SendPropertyChanging();
			entity.Answer1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoryContent")]
	public partial class StoryContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkStoryPageId;
		
		private int _fkStoryId;
		
		private System.Nullable<int> _fkMediaId;
		
		private int _pageNumber;
		
		private string _pageName;
		
		private string _pageContent;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private string _ImageName;
		
		private string _BackgroundName;
		
		private string _gadgetImageName;
		
		private EntityRef<Story> _Story;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkStoryPageIdChanging(int value);
    partial void OnpkStoryPageIdChanged();
    partial void OnfkStoryIdChanging(int value);
    partial void OnfkStoryIdChanged();
    partial void OnfkMediaIdChanging(System.Nullable<int> value);
    partial void OnfkMediaIdChanged();
    partial void OnpageNumberChanging(int value);
    partial void OnpageNumberChanged();
    partial void OnpageNameChanging(string value);
    partial void OnpageNameChanged();
    partial void OnpageContentChanging(string value);
    partial void OnpageContentChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnBackgroundNameChanging(string value);
    partial void OnBackgroundNameChanged();
    partial void OngadgetImageNameChanging(string value);
    partial void OngadgetImageNameChanged();
    #endregion
		
		public StoryContent()
		{
			this._Story = default(EntityRef<Story>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStoryPageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkStoryPageId
		{
			get
			{
				return this._pkStoryPageId;
			}
			set
			{
				if ((this._pkStoryPageId != value))
				{
					this.OnpkStoryPageIdChanging(value);
					this.SendPropertyChanging();
					this._pkStoryPageId = value;
					this.SendPropertyChanged("pkStoryPageId");
					this.OnpkStoryPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkStoryId", DbType="Int NOT NULL")]
		public int fkStoryId
		{
			get
			{
				return this._fkStoryId;
			}
			set
			{
				if ((this._fkStoryId != value))
				{
					if (this._Story.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkStoryIdChanging(value);
					this.SendPropertyChanging();
					this._fkStoryId = value;
					this.SendPropertyChanged("fkStoryId");
					this.OnfkStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkMediaId", DbType="Int")]
		public System.Nullable<int> fkMediaId
		{
			get
			{
				return this._fkMediaId;
			}
			set
			{
				if ((this._fkMediaId != value))
				{
					this.OnfkMediaIdChanging(value);
					this.SendPropertyChanging();
					this._fkMediaId = value;
					this.SendPropertyChanged("fkMediaId");
					this.OnfkMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageNumber", DbType="Int NOT NULL")]
		public int pageNumber
		{
			get
			{
				return this._pageNumber;
			}
			set
			{
				if ((this._pageNumber != value))
				{
					this.OnpageNumberChanging(value);
					this.SendPropertyChanging();
					this._pageNumber = value;
					this.SendPropertyChanged("pageNumber");
					this.OnpageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageName", DbType="NVarChar(150)")]
		public string pageName
		{
			get
			{
				return this._pageName;
			}
			set
			{
				if ((this._pageName != value))
				{
					this.OnpageNameChanging(value);
					this.SendPropertyChanging();
					this._pageName = value;
					this.SendPropertyChanged("pageName");
					this.OnpageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pageContent
		{
			get
			{
				return this._pageContent;
			}
			set
			{
				if ((this._pageContent != value))
				{
					this.OnpageContentChanging(value);
					this.SendPropertyChanging();
					this._pageContent = value;
					this.SendPropertyChanged("pageContent");
					this.OnpageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(150)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundName", DbType="NVarChar(150)")]
		public string BackgroundName
		{
			get
			{
				return this._BackgroundName;
			}
			set
			{
				if ((this._BackgroundName != value))
				{
					this.OnBackgroundNameChanging(value);
					this.SendPropertyChanging();
					this._BackgroundName = value;
					this.SendPropertyChanged("BackgroundName");
					this.OnBackgroundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gadgetImageName", DbType="NVarChar(150)")]
		public string gadgetImageName
		{
			get
			{
				return this._gadgetImageName;
			}
			set
			{
				if ((this._gadgetImageName != value))
				{
					this.OngadgetImageNameChanging(value);
					this.SendPropertyChanging();
					this._gadgetImageName = value;
					this.SendPropertyChanged("gadgetImageName");
					this.OngadgetImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryContent", Storage="_Story", ThisKey="fkStoryId", OtherKey="pkStoryId", IsForeignKey=true)]
		public Story Story
		{
			get
			{
				return this._Story.Entity;
			}
			set
			{
				Story previousValue = this._Story.Entity;
				if (((previousValue != value) 
							|| (this._Story.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Story.Entity = null;
						previousValue.StoryContents.Remove(this);
					}
					this._Story.Entity = value;
					if ((value != null))
					{
						value.StoryContents.Add(this);
						this._fkStoryId = value.pkStoryId;
					}
					else
					{
						this._fkStoryId = default(int);
					}
					this.SendPropertyChanged("Story");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Story")]
	public partial class Story : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkStoryId;
		
		private string _title;
		
		private string _summary;
		
		private System.Nullable<int> _fkTemplateId;
		
		private System.Nullable<int> _fkEditionId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _PostedDate;
		
		private System.Nullable<int> _FontName;
		
		private System.Nullable<int> _NumberOfPages;
		
		private System.Nullable<bool> _ShowOnHomePage;
		
		private System.Nullable<bool> _Status;
		
		private string _ImageName;
		
		private EntitySet<StoryContent> _StoryContents;
		
		private EntityRef<ContentTemplate> _ContentTemplate;
		
		private EntityRef<MagazineEdition> _MagazineEdition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkStoryIdChanging(int value);
    partial void OnpkStoryIdChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void OnfkTemplateIdChanging(System.Nullable<int> value);
    partial void OnfkTemplateIdChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostedDateChanged();
    partial void OnFontNameChanging(System.Nullable<int> value);
    partial void OnFontNameChanged();
    partial void OnNumberOfPagesChanging(System.Nullable<int> value);
    partial void OnNumberOfPagesChanged();
    partial void OnShowOnHomePageChanging(System.Nullable<bool> value);
    partial void OnShowOnHomePageChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    #endregion
		
		public Story()
		{
			this._StoryContents = new EntitySet<StoryContent>(new Action<StoryContent>(this.attach_StoryContents), new Action<StoryContent>(this.detach_StoryContents));
			this._ContentTemplate = default(EntityRef<ContentTemplate>);
			this._MagazineEdition = default(EntityRef<MagazineEdition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkStoryId
		{
			get
			{
				return this._pkStoryId;
			}
			set
			{
				if ((this._pkStoryId != value))
				{
					this.OnpkStoryIdChanging(value);
					this.SendPropertyChanging();
					this._pkStoryId = value;
					this.SendPropertyChanged("pkStoryId");
					this.OnpkStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="NVarChar(250)")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkTemplateId", DbType="Int")]
		public System.Nullable<int> fkTemplateId
		{
			get
			{
				return this._fkTemplateId;
			}
			set
			{
				if ((this._fkTemplateId != value))
				{
					if (this._ContentTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._fkTemplateId = value;
					this.SendPropertyChanged("fkTemplateId");
					this.OnfkTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					if (this._MagazineEdition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostedDate
		{
			get
			{
				return this._PostedDate;
			}
			set
			{
				if ((this._PostedDate != value))
				{
					this.OnPostedDateChanging(value);
					this.SendPropertyChanging();
					this._PostedDate = value;
					this.SendPropertyChanged("PostedDate");
					this.OnPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontName", DbType="Int")]
		public System.Nullable<int> FontName
		{
			get
			{
				return this._FontName;
			}
			set
			{
				if ((this._FontName != value))
				{
					this.OnFontNameChanging(value);
					this.SendPropertyChanging();
					this._FontName = value;
					this.SendPropertyChanged("FontName");
					this.OnFontNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPages", DbType="Int")]
		public System.Nullable<int> NumberOfPages
		{
			get
			{
				return this._NumberOfPages;
			}
			set
			{
				if ((this._NumberOfPages != value))
				{
					this.OnNumberOfPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPages = value;
					this.SendPropertyChanged("NumberOfPages");
					this.OnNumberOfPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnHomePage", DbType="Bit")]
		public System.Nullable<bool> ShowOnHomePage
		{
			get
			{
				return this._ShowOnHomePage;
			}
			set
			{
				if ((this._ShowOnHomePage != value))
				{
					this.OnShowOnHomePageChanging(value);
					this.SendPropertyChanging();
					this._ShowOnHomePage = value;
					this.SendPropertyChanged("ShowOnHomePage");
					this.OnShowOnHomePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(100)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryContent", Storage="_StoryContents", ThisKey="pkStoryId", OtherKey="fkStoryId")]
		public EntitySet<StoryContent> StoryContents
		{
			get
			{
				return this._StoryContents;
			}
			set
			{
				this._StoryContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentTemplate_Story", Storage="_ContentTemplate", ThisKey="fkTemplateId", OtherKey="pkContentTemplateId", IsForeignKey=true)]
		public ContentTemplate ContentTemplate
		{
			get
			{
				return this._ContentTemplate.Entity;
			}
			set
			{
				ContentTemplate previousValue = this._ContentTemplate.Entity;
				if (((previousValue != value) 
							|| (this._ContentTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentTemplate.Entity = null;
						previousValue.Stories.Remove(this);
					}
					this._ContentTemplate.Entity = value;
					if ((value != null))
					{
						value.Stories.Add(this);
						this._fkTemplateId = value.pkContentTemplateId;
					}
					else
					{
						this._fkTemplateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContentTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Story", Storage="_MagazineEdition", ThisKey="fkEditionId", OtherKey="pkEditionId", IsForeignKey=true)]
		public MagazineEdition MagazineEdition
		{
			get
			{
				return this._MagazineEdition.Entity;
			}
			set
			{
				MagazineEdition previousValue = this._MagazineEdition.Entity;
				if (((previousValue != value) 
							|| (this._MagazineEdition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineEdition.Entity = null;
						previousValue.Stories.Remove(this);
					}
					this._MagazineEdition.Entity = value;
					if ((value != null))
					{
						value.Stories.Add(this);
						this._fkEditionId = value.pkEditionId;
					}
					else
					{
						this._fkEditionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MagazineEdition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoryContents(StoryContent entity)
		{
			this.SendPropertyChanging();
			entity.Story = this;
		}
		
		private void detach_StoryContents(StoryContent entity)
		{
			this.SendPropertyChanging();
			entity.Story = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentTemplate")]
	public partial class ContentTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkContentTemplateId;
		
		private string _TemplateName;
		
		private string _TemplateBody;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private EntitySet<Story> _Stories;
		
		private EntitySet<Proverb> _Proverbs;
		
		private EntitySet<Humor> _Humors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkContentTemplateIdChanging(int value);
    partial void OnpkContentTemplateIdChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnTemplateBodyChanging(string value);
    partial void OnTemplateBodyChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    #endregion
		
		public ContentTemplate()
		{
			this._Stories = new EntitySet<Story>(new Action<Story>(this.attach_Stories), new Action<Story>(this.detach_Stories));
			this._Proverbs = new EntitySet<Proverb>(new Action<Proverb>(this.attach_Proverbs), new Action<Proverb>(this.detach_Proverbs));
			this._Humors = new EntitySet<Humor>(new Action<Humor>(this.attach_Humors), new Action<Humor>(this.detach_Humors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkContentTemplateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkContentTemplateId
		{
			get
			{
				return this._pkContentTemplateId;
			}
			set
			{
				if ((this._pkContentTemplateId != value))
				{
					this.OnpkContentTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._pkContentTemplateId = value;
					this.SendPropertyChanged("pkContentTemplateId");
					this.OnpkContentTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="NVarChar(500)")]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateBody", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TemplateBody
		{
			get
			{
				return this._TemplateBody;
			}
			set
			{
				if ((this._TemplateBody != value))
				{
					this.OnTemplateBodyChanging(value);
					this.SendPropertyChanging();
					this._TemplateBody = value;
					this.SendPropertyChanged("TemplateBody");
					this.OnTemplateBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentTemplate_Story", Storage="_Stories", ThisKey="pkContentTemplateId", OtherKey="fkTemplateId")]
		public EntitySet<Story> Stories
		{
			get
			{
				return this._Stories;
			}
			set
			{
				this._Stories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentTemplate_Proverb", Storage="_Proverbs", ThisKey="pkContentTemplateId", OtherKey="fkTemplateId")]
		public EntitySet<Proverb> Proverbs
		{
			get
			{
				return this._Proverbs;
			}
			set
			{
				this._Proverbs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentTemplate_Humor", Storage="_Humors", ThisKey="pkContentTemplateId", OtherKey="fkTemplateId")]
		public EntitySet<Humor> Humors
		{
			get
			{
				return this._Humors;
			}
			set
			{
				this._Humors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.ContentTemplate = this;
		}
		
		private void detach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.ContentTemplate = null;
		}
		
		private void attach_Proverbs(Proverb entity)
		{
			this.SendPropertyChanging();
			entity.ContentTemplate = this;
		}
		
		private void detach_Proverbs(Proverb entity)
		{
			this.SendPropertyChanging();
			entity.ContentTemplate = null;
		}
		
		private void attach_Humors(Humor entity)
		{
			this.SendPropertyChanging();
			entity.ContentTemplate = this;
		}
		
		private void detach_Humors(Humor entity)
		{
			this.SendPropertyChanging();
			entity.ContentTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkStaffId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Title;
		
		private string _Nickname;
		
		private System.Nullable<int> _fkPictureId;
		
		private string _BioText;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkStaffIdChanging(int value);
    partial void OnpkStaffIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNicknameChanging(string value);
    partial void OnNicknameChanged();
    partial void OnfkPictureIdChanging(System.Nullable<int> value);
    partial void OnfkPictureIdChanged();
    partial void OnBioTextChanging(string value);
    partial void OnBioTextChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    #endregion
		
		public Staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkStaffId
		{
			get
			{
				return this._pkStaffId;
			}
			set
			{
				if ((this._pkStaffId != value))
				{
					this.OnpkStaffIdChanging(value);
					this.SendPropertyChanging();
					this._pkStaffId = value;
					this.SendPropertyChanged("pkStaffId");
					this.OnpkStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="NVarChar(250)")]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this.OnNicknameChanging(value);
					this.SendPropertyChanging();
					this._Nickname = value;
					this.SendPropertyChanged("Nickname");
					this.OnNicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkPictureId", DbType="Int")]
		public System.Nullable<int> fkPictureId
		{
			get
			{
				return this._fkPictureId;
			}
			set
			{
				if ((this._fkPictureId != value))
				{
					this.OnfkPictureIdChanging(value);
					this.SendPropertyChanging();
					this._fkPictureId = value;
					this.SendPropertyChanged("fkPictureId");
					this.OnfkPictureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BioText", DbType="NVarChar(4000)")]
		public string BioText
		{
			get
			{
				return this._BioText;
			}
			set
			{
				if ((this._BioText != value))
				{
					this.OnBioTextChanging(value);
					this.SendPropertyChanging();
					this._BioText = value;
					this.SendPropertyChanged("BioText");
					this.OnBioTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MagazineEdition")]
	public partial class MagazineEdition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkEditionId;
		
		private int _Number;
		
		private string _Title;
		
		private string _Description;
		
		private bool _isCurrentEdition;
		
		private string _CoverImage;
		
		private System.Nullable<System.DateTime> _PublishedOn;
		
		private System.Nullable<System.DateTime> _ArchivedOn;
		
		private EntitySet<Riddle> _Riddles;
		
		private EntitySet<Story> _Stories;
		
		private EntitySet<Proverb> _Proverbs;
		
		private EntitySet<Humor> _Humors;
		
		private EntitySet<WriteAnswerGame> _WriteAnswerGames;
		
		private EntitySet<SelectOneGame> _SelectOneGames;
		
		private EntitySet<FindDifferenceGame> _FindDifferenceGames;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkEditionIdChanging(int value);
    partial void OnpkEditionIdChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnisCurrentEditionChanging(bool value);
    partial void OnisCurrentEditionChanged();
    partial void OnCoverImageChanging(string value);
    partial void OnCoverImageChanged();
    partial void OnPublishedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedOnChanged();
    partial void OnArchivedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnArchivedOnChanged();
    #endregion
		
		public MagazineEdition()
		{
			this._Riddles = new EntitySet<Riddle>(new Action<Riddle>(this.attach_Riddles), new Action<Riddle>(this.detach_Riddles));
			this._Stories = new EntitySet<Story>(new Action<Story>(this.attach_Stories), new Action<Story>(this.detach_Stories));
			this._Proverbs = new EntitySet<Proverb>(new Action<Proverb>(this.attach_Proverbs), new Action<Proverb>(this.detach_Proverbs));
			this._Humors = new EntitySet<Humor>(new Action<Humor>(this.attach_Humors), new Action<Humor>(this.detach_Humors));
			this._WriteAnswerGames = new EntitySet<WriteAnswerGame>(new Action<WriteAnswerGame>(this.attach_WriteAnswerGames), new Action<WriteAnswerGame>(this.detach_WriteAnswerGames));
			this._SelectOneGames = new EntitySet<SelectOneGame>(new Action<SelectOneGame>(this.attach_SelectOneGames), new Action<SelectOneGame>(this.detach_SelectOneGames));
			this._FindDifferenceGames = new EntitySet<FindDifferenceGame>(new Action<FindDifferenceGame>(this.attach_FindDifferenceGames), new Action<FindDifferenceGame>(this.detach_FindDifferenceGames));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkEditionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkEditionId
		{
			get
			{
				return this._pkEditionId;
			}
			set
			{
				if ((this._pkEditionId != value))
				{
					this.OnpkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._pkEditionId = value;
					this.SendPropertyChanged("pkEditionId");
					this.OnpkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCurrentEdition", DbType="Bit NOT NULL")]
		public bool isCurrentEdition
		{
			get
			{
				return this._isCurrentEdition;
			}
			set
			{
				if ((this._isCurrentEdition != value))
				{
					this.OnisCurrentEditionChanging(value);
					this.SendPropertyChanging();
					this._isCurrentEdition = value;
					this.SendPropertyChanged("isCurrentEdition");
					this.OnisCurrentEditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverImage", DbType="NVarChar(150)")]
		public string CoverImage
		{
			get
			{
				return this._CoverImage;
			}
			set
			{
				if ((this._CoverImage != value))
				{
					this.OnCoverImageChanging(value);
					this.SendPropertyChanging();
					this._CoverImage = value;
					this.SendPropertyChanged("CoverImage");
					this.OnCoverImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedOn
		{
			get
			{
				return this._PublishedOn;
			}
			set
			{
				if ((this._PublishedOn != value))
				{
					this.OnPublishedOnChanging(value);
					this.SendPropertyChanging();
					this._PublishedOn = value;
					this.SendPropertyChanged("PublishedOn");
					this.OnPublishedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchivedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArchivedOn
		{
			get
			{
				return this._ArchivedOn;
			}
			set
			{
				if ((this._ArchivedOn != value))
				{
					this.OnArchivedOnChanging(value);
					this.SendPropertyChanging();
					this._ArchivedOn = value;
					this.SendPropertyChanged("ArchivedOn");
					this.OnArchivedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Riddle", Storage="_Riddles", ThisKey="pkEditionId", OtherKey="fkEditionId")]
		public EntitySet<Riddle> Riddles
		{
			get
			{
				return this._Riddles;
			}
			set
			{
				this._Riddles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Story", Storage="_Stories", ThisKey="pkEditionId", OtherKey="fkEditionId")]
		public EntitySet<Story> Stories
		{
			get
			{
				return this._Stories;
			}
			set
			{
				this._Stories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Proverb", Storage="_Proverbs", ThisKey="pkEditionId", OtherKey="fkEditionId")]
		public EntitySet<Proverb> Proverbs
		{
			get
			{
				return this._Proverbs;
			}
			set
			{
				this._Proverbs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Humor", Storage="_Humors", ThisKey="pkEditionId", OtherKey="fkEditionId")]
		public EntitySet<Humor> Humors
		{
			get
			{
				return this._Humors;
			}
			set
			{
				this._Humors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_WriteAnswerGame", Storage="_WriteAnswerGames", ThisKey="pkEditionId", OtherKey="fkEditionId")]
		public EntitySet<WriteAnswerGame> WriteAnswerGames
		{
			get
			{
				return this._WriteAnswerGames;
			}
			set
			{
				this._WriteAnswerGames.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_SelectOneGame", Storage="_SelectOneGames", ThisKey="pkEditionId", OtherKey="fkEditionId")]
		public EntitySet<SelectOneGame> SelectOneGames
		{
			get
			{
				return this._SelectOneGames;
			}
			set
			{
				this._SelectOneGames.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_FindDifferenceGame", Storage="_FindDifferenceGames", ThisKey="pkEditionId", OtherKey="fkEditionId")]
		public EntitySet<FindDifferenceGame> FindDifferenceGames
		{
			get
			{
				return this._FindDifferenceGames;
			}
			set
			{
				this._FindDifferenceGames.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Riddles(Riddle entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = this;
		}
		
		private void detach_Riddles(Riddle entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = null;
		}
		
		private void attach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = this;
		}
		
		private void detach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = null;
		}
		
		private void attach_Proverbs(Proverb entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = this;
		}
		
		private void detach_Proverbs(Proverb entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = null;
		}
		
		private void attach_Humors(Humor entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = this;
		}
		
		private void detach_Humors(Humor entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = null;
		}
		
		private void attach_WriteAnswerGames(WriteAnswerGame entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = this;
		}
		
		private void detach_WriteAnswerGames(WriteAnswerGame entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = null;
		}
		
		private void attach_SelectOneGames(SelectOneGame entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = this;
		}
		
		private void detach_SelectOneGames(SelectOneGame entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = null;
		}
		
		private void attach_FindDifferenceGames(FindDifferenceGame entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = this;
		}
		
		private void detach_FindDifferenceGames(FindDifferenceGame entity)
		{
			this.SendPropertyChanging();
			entity.MagazineEdition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proverb")]
	public partial class Proverb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkProverbId;
		
		private string _title;
		
		private string _summary;
		
		private System.Nullable<int> _fkTemplateId;
		
		private System.Nullable<int> _fkEditionId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _PostedDate;
		
		private System.Nullable<int> _FontName;
		
		private System.Nullable<int> _NumberOfPages;
		
		private System.Nullable<bool> _ShowOnHomePage;
		
		private System.Nullable<bool> _Status;
		
		private string _ImageName;
		
		private EntitySet<ProverbContent> _ProverbContents;
		
		private EntityRef<ContentTemplate> _ContentTemplate;
		
		private EntityRef<MagazineEdition> _MagazineEdition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkProverbIdChanging(int value);
    partial void OnpkProverbIdChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void OnfkTemplateIdChanging(System.Nullable<int> value);
    partial void OnfkTemplateIdChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostedDateChanged();
    partial void OnFontNameChanging(System.Nullable<int> value);
    partial void OnFontNameChanged();
    partial void OnNumberOfPagesChanging(System.Nullable<int> value);
    partial void OnNumberOfPagesChanged();
    partial void OnShowOnHomePageChanging(System.Nullable<bool> value);
    partial void OnShowOnHomePageChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    #endregion
		
		public Proverb()
		{
			this._ProverbContents = new EntitySet<ProverbContent>(new Action<ProverbContent>(this.attach_ProverbContents), new Action<ProverbContent>(this.detach_ProverbContents));
			this._ContentTemplate = default(EntityRef<ContentTemplate>);
			this._MagazineEdition = default(EntityRef<MagazineEdition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkProverbId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkProverbId
		{
			get
			{
				return this._pkProverbId;
			}
			set
			{
				if ((this._pkProverbId != value))
				{
					this.OnpkProverbIdChanging(value);
					this.SendPropertyChanging();
					this._pkProverbId = value;
					this.SendPropertyChanged("pkProverbId");
					this.OnpkProverbIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="NVarChar(250)")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkTemplateId", DbType="Int")]
		public System.Nullable<int> fkTemplateId
		{
			get
			{
				return this._fkTemplateId;
			}
			set
			{
				if ((this._fkTemplateId != value))
				{
					if (this._ContentTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._fkTemplateId = value;
					this.SendPropertyChanged("fkTemplateId");
					this.OnfkTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					if (this._MagazineEdition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostedDate
		{
			get
			{
				return this._PostedDate;
			}
			set
			{
				if ((this._PostedDate != value))
				{
					this.OnPostedDateChanging(value);
					this.SendPropertyChanging();
					this._PostedDate = value;
					this.SendPropertyChanged("PostedDate");
					this.OnPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontName", DbType="Int")]
		public System.Nullable<int> FontName
		{
			get
			{
				return this._FontName;
			}
			set
			{
				if ((this._FontName != value))
				{
					this.OnFontNameChanging(value);
					this.SendPropertyChanging();
					this._FontName = value;
					this.SendPropertyChanged("FontName");
					this.OnFontNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPages", DbType="Int")]
		public System.Nullable<int> NumberOfPages
		{
			get
			{
				return this._NumberOfPages;
			}
			set
			{
				if ((this._NumberOfPages != value))
				{
					this.OnNumberOfPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPages = value;
					this.SendPropertyChanged("NumberOfPages");
					this.OnNumberOfPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnHomePage", DbType="Bit")]
		public System.Nullable<bool> ShowOnHomePage
		{
			get
			{
				return this._ShowOnHomePage;
			}
			set
			{
				if ((this._ShowOnHomePage != value))
				{
					this.OnShowOnHomePageChanging(value);
					this.SendPropertyChanging();
					this._ShowOnHomePage = value;
					this.SendPropertyChanged("ShowOnHomePage");
					this.OnShowOnHomePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(100)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proverb_ProverbContent", Storage="_ProverbContents", ThisKey="pkProverbId", OtherKey="fkProverbId")]
		public EntitySet<ProverbContent> ProverbContents
		{
			get
			{
				return this._ProverbContents;
			}
			set
			{
				this._ProverbContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentTemplate_Proverb", Storage="_ContentTemplate", ThisKey="fkTemplateId", OtherKey="pkContentTemplateId", IsForeignKey=true)]
		public ContentTemplate ContentTemplate
		{
			get
			{
				return this._ContentTemplate.Entity;
			}
			set
			{
				ContentTemplate previousValue = this._ContentTemplate.Entity;
				if (((previousValue != value) 
							|| (this._ContentTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentTemplate.Entity = null;
						previousValue.Proverbs.Remove(this);
					}
					this._ContentTemplate.Entity = value;
					if ((value != null))
					{
						value.Proverbs.Add(this);
						this._fkTemplateId = value.pkContentTemplateId;
					}
					else
					{
						this._fkTemplateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContentTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Proverb", Storage="_MagazineEdition", ThisKey="fkEditionId", OtherKey="pkEditionId", IsForeignKey=true)]
		public MagazineEdition MagazineEdition
		{
			get
			{
				return this._MagazineEdition.Entity;
			}
			set
			{
				MagazineEdition previousValue = this._MagazineEdition.Entity;
				if (((previousValue != value) 
							|| (this._MagazineEdition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineEdition.Entity = null;
						previousValue.Proverbs.Remove(this);
					}
					this._MagazineEdition.Entity = value;
					if ((value != null))
					{
						value.Proverbs.Add(this);
						this._fkEditionId = value.pkEditionId;
					}
					else
					{
						this._fkEditionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MagazineEdition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProverbContents(ProverbContent entity)
		{
			this.SendPropertyChanging();
			entity.Proverb = this;
		}
		
		private void detach_ProverbContents(ProverbContent entity)
		{
			this.SendPropertyChanging();
			entity.Proverb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProverbContent")]
	public partial class ProverbContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkProverbPageId;
		
		private int _fkProverbId;
		
		private int _pageNumber;
		
		private string _pageName;
		
		private string _pageContent;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private string _ImageName;
		
		private string _BackgroundName;
		
		private string _gadgetImageName;
		
		private EntityRef<Proverb> _Proverb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkProverbPageIdChanging(int value);
    partial void OnpkProverbPageIdChanged();
    partial void OnfkProverbIdChanging(int value);
    partial void OnfkProverbIdChanged();
    partial void OnpageNumberChanging(int value);
    partial void OnpageNumberChanged();
    partial void OnpageNameChanging(string value);
    partial void OnpageNameChanged();
    partial void OnpageContentChanging(string value);
    partial void OnpageContentChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnBackgroundNameChanging(string value);
    partial void OnBackgroundNameChanged();
    partial void OngadgetImageNameChanging(string value);
    partial void OngadgetImageNameChanged();
    #endregion
		
		public ProverbContent()
		{
			this._Proverb = default(EntityRef<Proverb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkProverbPageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkProverbPageId
		{
			get
			{
				return this._pkProverbPageId;
			}
			set
			{
				if ((this._pkProverbPageId != value))
				{
					this.OnpkProverbPageIdChanging(value);
					this.SendPropertyChanging();
					this._pkProverbPageId = value;
					this.SendPropertyChanged("pkProverbPageId");
					this.OnpkProverbPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkProverbId", DbType="Int NOT NULL")]
		public int fkProverbId
		{
			get
			{
				return this._fkProverbId;
			}
			set
			{
				if ((this._fkProverbId != value))
				{
					if (this._Proverb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkProverbIdChanging(value);
					this.SendPropertyChanging();
					this._fkProverbId = value;
					this.SendPropertyChanged("fkProverbId");
					this.OnfkProverbIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageNumber", DbType="Int NOT NULL")]
		public int pageNumber
		{
			get
			{
				return this._pageNumber;
			}
			set
			{
				if ((this._pageNumber != value))
				{
					this.OnpageNumberChanging(value);
					this.SendPropertyChanging();
					this._pageNumber = value;
					this.SendPropertyChanged("pageNumber");
					this.OnpageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageName", DbType="NVarChar(150)")]
		public string pageName
		{
			get
			{
				return this._pageName;
			}
			set
			{
				if ((this._pageName != value))
				{
					this.OnpageNameChanging(value);
					this.SendPropertyChanging();
					this._pageName = value;
					this.SendPropertyChanged("pageName");
					this.OnpageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pageContent
		{
			get
			{
				return this._pageContent;
			}
			set
			{
				if ((this._pageContent != value))
				{
					this.OnpageContentChanging(value);
					this.SendPropertyChanging();
					this._pageContent = value;
					this.SendPropertyChanged("pageContent");
					this.OnpageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(150)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundName", DbType="NVarChar(150)")]
		public string BackgroundName
		{
			get
			{
				return this._BackgroundName;
			}
			set
			{
				if ((this._BackgroundName != value))
				{
					this.OnBackgroundNameChanging(value);
					this.SendPropertyChanging();
					this._BackgroundName = value;
					this.SendPropertyChanged("BackgroundName");
					this.OnBackgroundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gadgetImageName", DbType="NVarChar(150)")]
		public string gadgetImageName
		{
			get
			{
				return this._gadgetImageName;
			}
			set
			{
				if ((this._gadgetImageName != value))
				{
					this.OngadgetImageNameChanging(value);
					this.SendPropertyChanging();
					this._gadgetImageName = value;
					this.SendPropertyChanged("gadgetImageName");
					this.OngadgetImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proverb_ProverbContent", Storage="_Proverb", ThisKey="fkProverbId", OtherKey="pkProverbId", IsForeignKey=true)]
		public Proverb Proverb
		{
			get
			{
				return this._Proverb.Entity;
			}
			set
			{
				Proverb previousValue = this._Proverb.Entity;
				if (((previousValue != value) 
							|| (this._Proverb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proverb.Entity = null;
						previousValue.ProverbContents.Remove(this);
					}
					this._Proverb.Entity = value;
					if ((value != null))
					{
						value.ProverbContents.Add(this);
						this._fkProverbId = value.pkProverbId;
					}
					else
					{
						this._fkProverbId = default(int);
					}
					this.SendPropertyChanged("Proverb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HumorContent")]
	public partial class HumorContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkHumorPageId;
		
		private int _fkHumorId;
		
		private int _pageNumber;
		
		private string _pageName;
		
		private string _pageContent;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private string _ImageName;
		
		private string _BackgroundName;
		
		private string _gadgetImageName;
		
		private EntityRef<Humor> _Humor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkHumorPageIdChanging(int value);
    partial void OnpkHumorPageIdChanged();
    partial void OnfkHumorIdChanging(int value);
    partial void OnfkHumorIdChanged();
    partial void OnpageNumberChanging(int value);
    partial void OnpageNumberChanged();
    partial void OnpageNameChanging(string value);
    partial void OnpageNameChanged();
    partial void OnpageContentChanging(string value);
    partial void OnpageContentChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnBackgroundNameChanging(string value);
    partial void OnBackgroundNameChanged();
    partial void OngadgetImageNameChanging(string value);
    partial void OngadgetImageNameChanged();
    #endregion
		
		public HumorContent()
		{
			this._Humor = default(EntityRef<Humor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkHumorPageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkHumorPageId
		{
			get
			{
				return this._pkHumorPageId;
			}
			set
			{
				if ((this._pkHumorPageId != value))
				{
					this.OnpkHumorPageIdChanging(value);
					this.SendPropertyChanging();
					this._pkHumorPageId = value;
					this.SendPropertyChanged("pkHumorPageId");
					this.OnpkHumorPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkHumorId", DbType="Int NOT NULL")]
		public int fkHumorId
		{
			get
			{
				return this._fkHumorId;
			}
			set
			{
				if ((this._fkHumorId != value))
				{
					if (this._Humor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkHumorIdChanging(value);
					this.SendPropertyChanging();
					this._fkHumorId = value;
					this.SendPropertyChanged("fkHumorId");
					this.OnfkHumorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageNumber", DbType="Int NOT NULL")]
		public int pageNumber
		{
			get
			{
				return this._pageNumber;
			}
			set
			{
				if ((this._pageNumber != value))
				{
					this.OnpageNumberChanging(value);
					this.SendPropertyChanging();
					this._pageNumber = value;
					this.SendPropertyChanged("pageNumber");
					this.OnpageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageName", DbType="NVarChar(150)")]
		public string pageName
		{
			get
			{
				return this._pageName;
			}
			set
			{
				if ((this._pageName != value))
				{
					this.OnpageNameChanging(value);
					this.SendPropertyChanging();
					this._pageName = value;
					this.SendPropertyChanged("pageName");
					this.OnpageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pageContent
		{
			get
			{
				return this._pageContent;
			}
			set
			{
				if ((this._pageContent != value))
				{
					this.OnpageContentChanging(value);
					this.SendPropertyChanging();
					this._pageContent = value;
					this.SendPropertyChanged("pageContent");
					this.OnpageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(150)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundName", DbType="NVarChar(150)")]
		public string BackgroundName
		{
			get
			{
				return this._BackgroundName;
			}
			set
			{
				if ((this._BackgroundName != value))
				{
					this.OnBackgroundNameChanging(value);
					this.SendPropertyChanging();
					this._BackgroundName = value;
					this.SendPropertyChanged("BackgroundName");
					this.OnBackgroundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gadgetImageName", DbType="NVarChar(150)")]
		public string gadgetImageName
		{
			get
			{
				return this._gadgetImageName;
			}
			set
			{
				if ((this._gadgetImageName != value))
				{
					this.OngadgetImageNameChanging(value);
					this.SendPropertyChanging();
					this._gadgetImageName = value;
					this.SendPropertyChanged("gadgetImageName");
					this.OngadgetImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Humor_HumorContent", Storage="_Humor", ThisKey="fkHumorId", OtherKey="pkHumorId", IsForeignKey=true)]
		public Humor Humor
		{
			get
			{
				return this._Humor.Entity;
			}
			set
			{
				Humor previousValue = this._Humor.Entity;
				if (((previousValue != value) 
							|| (this._Humor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Humor.Entity = null;
						previousValue.HumorContents.Remove(this);
					}
					this._Humor.Entity = value;
					if ((value != null))
					{
						value.HumorContents.Add(this);
						this._fkHumorId = value.pkHumorId;
					}
					else
					{
						this._fkHumorId = default(int);
					}
					this.SendPropertyChanged("Humor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Humor")]
	public partial class Humor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkHumorId;
		
		private string _title;
		
		private string _summary;
		
		private System.Nullable<int> _fkTemplateId;
		
		private System.Nullable<int> _fkEditionId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _PostedDate;
		
		private System.Nullable<int> _FontName;
		
		private System.Nullable<int> _NumberOfPages;
		
		private System.Nullable<bool> _ShowOnHomePage;
		
		private System.Nullable<bool> _Status;
		
		private string _ImageName;
		
		private EntitySet<HumorContent> _HumorContents;
		
		private EntityRef<ContentTemplate> _ContentTemplate;
		
		private EntityRef<MagazineEdition> _MagazineEdition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkHumorIdChanging(int value);
    partial void OnpkHumorIdChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void OnfkTemplateIdChanging(System.Nullable<int> value);
    partial void OnfkTemplateIdChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostedDateChanged();
    partial void OnFontNameChanging(System.Nullable<int> value);
    partial void OnFontNameChanged();
    partial void OnNumberOfPagesChanging(System.Nullable<int> value);
    partial void OnNumberOfPagesChanged();
    partial void OnShowOnHomePageChanging(System.Nullable<bool> value);
    partial void OnShowOnHomePageChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    #endregion
		
		public Humor()
		{
			this._HumorContents = new EntitySet<HumorContent>(new Action<HumorContent>(this.attach_HumorContents), new Action<HumorContent>(this.detach_HumorContents));
			this._ContentTemplate = default(EntityRef<ContentTemplate>);
			this._MagazineEdition = default(EntityRef<MagazineEdition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkHumorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkHumorId
		{
			get
			{
				return this._pkHumorId;
			}
			set
			{
				if ((this._pkHumorId != value))
				{
					this.OnpkHumorIdChanging(value);
					this.SendPropertyChanging();
					this._pkHumorId = value;
					this.SendPropertyChanged("pkHumorId");
					this.OnpkHumorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="NVarChar(250)")]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkTemplateId", DbType="Int")]
		public System.Nullable<int> fkTemplateId
		{
			get
			{
				return this._fkTemplateId;
			}
			set
			{
				if ((this._fkTemplateId != value))
				{
					if (this._ContentTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._fkTemplateId = value;
					this.SendPropertyChanged("fkTemplateId");
					this.OnfkTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					if (this._MagazineEdition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostedDate
		{
			get
			{
				return this._PostedDate;
			}
			set
			{
				if ((this._PostedDate != value))
				{
					this.OnPostedDateChanging(value);
					this.SendPropertyChanging();
					this._PostedDate = value;
					this.SendPropertyChanged("PostedDate");
					this.OnPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontName", DbType="Int")]
		public System.Nullable<int> FontName
		{
			get
			{
				return this._FontName;
			}
			set
			{
				if ((this._FontName != value))
				{
					this.OnFontNameChanging(value);
					this.SendPropertyChanging();
					this._FontName = value;
					this.SendPropertyChanged("FontName");
					this.OnFontNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPages", DbType="Int")]
		public System.Nullable<int> NumberOfPages
		{
			get
			{
				return this._NumberOfPages;
			}
			set
			{
				if ((this._NumberOfPages != value))
				{
					this.OnNumberOfPagesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPages = value;
					this.SendPropertyChanged("NumberOfPages");
					this.OnNumberOfPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnHomePage", DbType="Bit")]
		public System.Nullable<bool> ShowOnHomePage
		{
			get
			{
				return this._ShowOnHomePage;
			}
			set
			{
				if ((this._ShowOnHomePage != value))
				{
					this.OnShowOnHomePageChanging(value);
					this.SendPropertyChanging();
					this._ShowOnHomePage = value;
					this.SendPropertyChanged("ShowOnHomePage");
					this.OnShowOnHomePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(100)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Humor_HumorContent", Storage="_HumorContents", ThisKey="pkHumorId", OtherKey="fkHumorId")]
		public EntitySet<HumorContent> HumorContents
		{
			get
			{
				return this._HumorContents;
			}
			set
			{
				this._HumorContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentTemplate_Humor", Storage="_ContentTemplate", ThisKey="fkTemplateId", OtherKey="pkContentTemplateId", IsForeignKey=true)]
		public ContentTemplate ContentTemplate
		{
			get
			{
				return this._ContentTemplate.Entity;
			}
			set
			{
				ContentTemplate previousValue = this._ContentTemplate.Entity;
				if (((previousValue != value) 
							|| (this._ContentTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentTemplate.Entity = null;
						previousValue.Humors.Remove(this);
					}
					this._ContentTemplate.Entity = value;
					if ((value != null))
					{
						value.Humors.Add(this);
						this._fkTemplateId = value.pkContentTemplateId;
					}
					else
					{
						this._fkTemplateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContentTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_Humor", Storage="_MagazineEdition", ThisKey="fkEditionId", OtherKey="pkEditionId", IsForeignKey=true)]
		public MagazineEdition MagazineEdition
		{
			get
			{
				return this._MagazineEdition.Entity;
			}
			set
			{
				MagazineEdition previousValue = this._MagazineEdition.Entity;
				if (((previousValue != value) 
							|| (this._MagazineEdition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineEdition.Entity = null;
						previousValue.Humors.Remove(this);
					}
					this._MagazineEdition.Entity = value;
					if ((value != null))
					{
						value.Humors.Add(this);
						this._fkEditionId = value.pkEditionId;
					}
					else
					{
						this._fkEditionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MagazineEdition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HumorContents(HumorContent entity)
		{
			this.SendPropertyChanging();
			entity.Humor = this;
		}
		
		private void detach_HumorContents(HumorContent entity)
		{
			this.SendPropertyChanging();
			entity.Humor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.WriteAnswerGame")]
	public partial class WriteAnswerGame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkWriteAnswerGameId;
		
		private string _Title;
		
		private string _Description;
		
		private string _QuestionText;
		
		private string _QuestionHTML;
		
		private string _AnswerText;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.DateTime> _PublishedOn;
		
		private System.Nullable<int> _fkEditionId;
		
		private string _ImageBG;
		
		private string _QuestionStyle;
		
		private EntityRef<MagazineEdition> _MagazineEdition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkWriteAnswerGameIdChanging(int value);
    partial void OnpkWriteAnswerGameIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQuestionTextChanging(string value);
    partial void OnQuestionTextChanged();
    partial void OnQuestionHTMLChanging(string value);
    partial void OnQuestionHTMLChanged();
    partial void OnAnswerTextChanging(string value);
    partial void OnAnswerTextChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnPublishedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedOnChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnImageBGChanging(string value);
    partial void OnImageBGChanged();
    partial void OnQuestionStyleChanging(string value);
    partial void OnQuestionStyleChanged();
    #endregion
		
		public WriteAnswerGame()
		{
			this._MagazineEdition = default(EntityRef<MagazineEdition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkWriteAnswerGameId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkWriteAnswerGameId
		{
			get
			{
				return this._pkWriteAnswerGameId;
			}
			set
			{
				if ((this._pkWriteAnswerGameId != value))
				{
					this.OnpkWriteAnswerGameIdChanging(value);
					this.SendPropertyChanging();
					this._pkWriteAnswerGameId = value;
					this.SendPropertyChanged("pkWriteAnswerGameId");
					this.OnpkWriteAnswerGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionText", DbType="NVarChar(1000)")]
		public string QuestionText
		{
			get
			{
				return this._QuestionText;
			}
			set
			{
				if ((this._QuestionText != value))
				{
					this.OnQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._QuestionText = value;
					this.SendPropertyChanged("QuestionText");
					this.OnQuestionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionHTML", DbType="NVarChar(MAX)")]
		public string QuestionHTML
		{
			get
			{
				return this._QuestionHTML;
			}
			set
			{
				if ((this._QuestionHTML != value))
				{
					this.OnQuestionHTMLChanging(value);
					this.SendPropertyChanging();
					this._QuestionHTML = value;
					this.SendPropertyChanged("QuestionHTML");
					this.OnQuestionHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(500)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this.OnAnswerTextChanging(value);
					this.SendPropertyChanging();
					this._AnswerText = value;
					this.SendPropertyChanged("AnswerText");
					this.OnAnswerTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedOn
		{
			get
			{
				return this._PublishedOn;
			}
			set
			{
				if ((this._PublishedOn != value))
				{
					this.OnPublishedOnChanging(value);
					this.SendPropertyChanging();
					this._PublishedOn = value;
					this.SendPropertyChanged("PublishedOn");
					this.OnPublishedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					if (this._MagazineEdition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageBG", DbType="NVarChar(50)")]
		public string ImageBG
		{
			get
			{
				return this._ImageBG;
			}
			set
			{
				if ((this._ImageBG != value))
				{
					this.OnImageBGChanging(value);
					this.SendPropertyChanging();
					this._ImageBG = value;
					this.SendPropertyChanged("ImageBG");
					this.OnImageBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionStyle", DbType="NVarChar(MAX)")]
		public string QuestionStyle
		{
			get
			{
				return this._QuestionStyle;
			}
			set
			{
				if ((this._QuestionStyle != value))
				{
					this.OnQuestionStyleChanging(value);
					this.SendPropertyChanging();
					this._QuestionStyle = value;
					this.SendPropertyChanged("QuestionStyle");
					this.OnQuestionStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_WriteAnswerGame", Storage="_MagazineEdition", ThisKey="fkEditionId", OtherKey="pkEditionId", IsForeignKey=true)]
		public MagazineEdition MagazineEdition
		{
			get
			{
				return this._MagazineEdition.Entity;
			}
			set
			{
				MagazineEdition previousValue = this._MagazineEdition.Entity;
				if (((previousValue != value) 
							|| (this._MagazineEdition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineEdition.Entity = null;
						previousValue.WriteAnswerGames.Remove(this);
					}
					this._MagazineEdition.Entity = value;
					if ((value != null))
					{
						value.WriteAnswerGames.Add(this);
						this._fkEditionId = value.pkEditionId;
					}
					else
					{
						this._fkEditionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MagazineEdition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.SelectOneGameAnswer")]
	public partial class SelectOneGameAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkSelectGameAnswerID;
		
		private string _AnswerText;
		
		private string _AnswerHTML;
		
		private System.Nullable<int> _fkSelectGameId;
		
		private bool _isCorrectAnswer;
		
		private EntityRef<SelectOneGame> _SelectOneGame;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkSelectGameAnswerIDChanging(int value);
    partial void OnpkSelectGameAnswerIDChanged();
    partial void OnAnswerTextChanging(string value);
    partial void OnAnswerTextChanged();
    partial void OnAnswerHTMLChanging(string value);
    partial void OnAnswerHTMLChanged();
    partial void OnfkSelectGameIdChanging(System.Nullable<int> value);
    partial void OnfkSelectGameIdChanged();
    partial void OnisCorrectAnswerChanging(bool value);
    partial void OnisCorrectAnswerChanged();
    #endregion
		
		public SelectOneGameAnswer()
		{
			this._SelectOneGame = default(EntityRef<SelectOneGame>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkSelectGameAnswerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkSelectGameAnswerID
		{
			get
			{
				return this._pkSelectGameAnswerID;
			}
			set
			{
				if ((this._pkSelectGameAnswerID != value))
				{
					this.OnpkSelectGameAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._pkSelectGameAnswerID = value;
					this.SendPropertyChanged("pkSelectGameAnswerID");
					this.OnpkSelectGameAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(100)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this.OnAnswerTextChanging(value);
					this.SendPropertyChanging();
					this._AnswerText = value;
					this.SendPropertyChanged("AnswerText");
					this.OnAnswerTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerHTML", DbType="NVarChar(1000)")]
		public string AnswerHTML
		{
			get
			{
				return this._AnswerHTML;
			}
			set
			{
				if ((this._AnswerHTML != value))
				{
					this.OnAnswerHTMLChanging(value);
					this.SendPropertyChanging();
					this._AnswerHTML = value;
					this.SendPropertyChanged("AnswerHTML");
					this.OnAnswerHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkSelectGameId", DbType="Int")]
		public System.Nullable<int> fkSelectGameId
		{
			get
			{
				return this._fkSelectGameId;
			}
			set
			{
				if ((this._fkSelectGameId != value))
				{
					if (this._SelectOneGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkSelectGameIdChanging(value);
					this.SendPropertyChanging();
					this._fkSelectGameId = value;
					this.SendPropertyChanged("fkSelectGameId");
					this.OnfkSelectGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCorrectAnswer", DbType="Bit NOT NULL")]
		public bool isCorrectAnswer
		{
			get
			{
				return this._isCorrectAnswer;
			}
			set
			{
				if ((this._isCorrectAnswer != value))
				{
					this.OnisCorrectAnswerChanging(value);
					this.SendPropertyChanging();
					this._isCorrectAnswer = value;
					this.SendPropertyChanged("isCorrectAnswer");
					this.OnisCorrectAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelectOneGame_SelectOneGameAnswer", Storage="_SelectOneGame", ThisKey="fkSelectGameId", OtherKey="pkSelectOneGameID", IsForeignKey=true)]
		public SelectOneGame SelectOneGame
		{
			get
			{
				return this._SelectOneGame.Entity;
			}
			set
			{
				SelectOneGame previousValue = this._SelectOneGame.Entity;
				if (((previousValue != value) 
							|| (this._SelectOneGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SelectOneGame.Entity = null;
						previousValue.SelectOneGameAnswers.Remove(this);
					}
					this._SelectOneGame.Entity = value;
					if ((value != null))
					{
						value.SelectOneGameAnswers.Add(this);
						this._fkSelectGameId = value.pkSelectOneGameID;
					}
					else
					{
						this._fkSelectGameId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SelectOneGame");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.SelectOneGame")]
	public partial class SelectOneGame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkSelectOneGameID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.DateTime> _PublishedOn;
		
		private System.Nullable<int> _fkEditionId;
		
		private string _AnswerBackgroundImage;
		
		private string _AnswerStyle;
		
		private EntitySet<SelectOneGameAnswer> _SelectOneGameAnswers;
		
		private EntityRef<MagazineEdition> _MagazineEdition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkSelectOneGameIDChanging(int value);
    partial void OnpkSelectOneGameIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnPublishedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedOnChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnAnswerBackgroundImageChanging(string value);
    partial void OnAnswerBackgroundImageChanged();
    partial void OnAnswerStyleChanging(string value);
    partial void OnAnswerStyleChanged();
    #endregion
		
		public SelectOneGame()
		{
			this._SelectOneGameAnswers = new EntitySet<SelectOneGameAnswer>(new Action<SelectOneGameAnswer>(this.attach_SelectOneGameAnswers), new Action<SelectOneGameAnswer>(this.detach_SelectOneGameAnswers));
			this._MagazineEdition = default(EntityRef<MagazineEdition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkSelectOneGameID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkSelectOneGameID
		{
			get
			{
				return this._pkSelectOneGameID;
			}
			set
			{
				if ((this._pkSelectOneGameID != value))
				{
					this.OnpkSelectOneGameIDChanging(value);
					this.SendPropertyChanging();
					this._pkSelectOneGameID = value;
					this.SendPropertyChanged("pkSelectOneGameID");
					this.OnpkSelectOneGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedOn
		{
			get
			{
				return this._PublishedOn;
			}
			set
			{
				if ((this._PublishedOn != value))
				{
					this.OnPublishedOnChanging(value);
					this.SendPropertyChanging();
					this._PublishedOn = value;
					this.SendPropertyChanged("PublishedOn");
					this.OnPublishedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					if (this._MagazineEdition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerBackgroundImage", DbType="NVarChar(250)")]
		public string AnswerBackgroundImage
		{
			get
			{
				return this._AnswerBackgroundImage;
			}
			set
			{
				if ((this._AnswerBackgroundImage != value))
				{
					this.OnAnswerBackgroundImageChanging(value);
					this.SendPropertyChanging();
					this._AnswerBackgroundImage = value;
					this.SendPropertyChanged("AnswerBackgroundImage");
					this.OnAnswerBackgroundImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerStyle", DbType="NVarChar(500)")]
		public string AnswerStyle
		{
			get
			{
				return this._AnswerStyle;
			}
			set
			{
				if ((this._AnswerStyle != value))
				{
					this.OnAnswerStyleChanging(value);
					this.SendPropertyChanging();
					this._AnswerStyle = value;
					this.SendPropertyChanged("AnswerStyle");
					this.OnAnswerStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelectOneGame_SelectOneGameAnswer", Storage="_SelectOneGameAnswers", ThisKey="pkSelectOneGameID", OtherKey="fkSelectGameId")]
		public EntitySet<SelectOneGameAnswer> SelectOneGameAnswers
		{
			get
			{
				return this._SelectOneGameAnswers;
			}
			set
			{
				this._SelectOneGameAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_SelectOneGame", Storage="_MagazineEdition", ThisKey="fkEditionId", OtherKey="pkEditionId", IsForeignKey=true)]
		public MagazineEdition MagazineEdition
		{
			get
			{
				return this._MagazineEdition.Entity;
			}
			set
			{
				MagazineEdition previousValue = this._MagazineEdition.Entity;
				if (((previousValue != value) 
							|| (this._MagazineEdition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineEdition.Entity = null;
						previousValue.SelectOneGames.Remove(this);
					}
					this._MagazineEdition.Entity = value;
					if ((value != null))
					{
						value.SelectOneGames.Add(this);
						this._fkEditionId = value.pkEditionId;
					}
					else
					{
						this._fkEditionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MagazineEdition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SelectOneGameAnswers(SelectOneGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.SelectOneGame = this;
		}
		
		private void detach_SelectOneGameAnswers(SelectOneGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.SelectOneGame = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.MatchingGameQuestion")]
	public partial class MatchingGameQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkMatchGameQuestionID;
		
		private string _QuestionText;
		
		private string _QuestionHTML;
		
		private System.Nullable<int> _fkMatchGameId;
		
		private string _QuestiosImage;
		
		private EntitySet<MatchingGameAnswer> _MatchingGameAnswers;
		
		private EntityRef<MatchingGame> _MatchingGame;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkMatchGameQuestionIDChanging(int value);
    partial void OnpkMatchGameQuestionIDChanged();
    partial void OnQuestionTextChanging(string value);
    partial void OnQuestionTextChanged();
    partial void OnQuestionHTMLChanging(string value);
    partial void OnQuestionHTMLChanged();
    partial void OnfkMatchGameIdChanging(System.Nullable<int> value);
    partial void OnfkMatchGameIdChanged();
    partial void OnQuestiosImageChanging(string value);
    partial void OnQuestiosImageChanged();
    #endregion
		
		public MatchingGameQuestion()
		{
			this._MatchingGameAnswers = new EntitySet<MatchingGameAnswer>(new Action<MatchingGameAnswer>(this.attach_MatchingGameAnswers), new Action<MatchingGameAnswer>(this.detach_MatchingGameAnswers));
			this._MatchingGame = default(EntityRef<MatchingGame>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkMatchGameQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkMatchGameQuestionID
		{
			get
			{
				return this._pkMatchGameQuestionID;
			}
			set
			{
				if ((this._pkMatchGameQuestionID != value))
				{
					this.OnpkMatchGameQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._pkMatchGameQuestionID = value;
					this.SendPropertyChanged("pkMatchGameQuestionID");
					this.OnpkMatchGameQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionText", DbType="NVarChar(100)")]
		public string QuestionText
		{
			get
			{
				return this._QuestionText;
			}
			set
			{
				if ((this._QuestionText != value))
				{
					this.OnQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._QuestionText = value;
					this.SendPropertyChanged("QuestionText");
					this.OnQuestionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionHTML", DbType="NVarChar(250)")]
		public string QuestionHTML
		{
			get
			{
				return this._QuestionHTML;
			}
			set
			{
				if ((this._QuestionHTML != value))
				{
					this.OnQuestionHTMLChanging(value);
					this.SendPropertyChanging();
					this._QuestionHTML = value;
					this.SendPropertyChanged("QuestionHTML");
					this.OnQuestionHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkMatchGameId", DbType="Int")]
		public System.Nullable<int> fkMatchGameId
		{
			get
			{
				return this._fkMatchGameId;
			}
			set
			{
				if ((this._fkMatchGameId != value))
				{
					if (this._MatchingGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkMatchGameIdChanging(value);
					this.SendPropertyChanging();
					this._fkMatchGameId = value;
					this.SendPropertyChanged("fkMatchGameId");
					this.OnfkMatchGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestiosImage", DbType="NVarChar(255)")]
		public string QuestiosImage
		{
			get
			{
				return this._QuestiosImage;
			}
			set
			{
				if ((this._QuestiosImage != value))
				{
					this.OnQuestiosImageChanging(value);
					this.SendPropertyChanging();
					this._QuestiosImage = value;
					this.SendPropertyChanged("QuestiosImage");
					this.OnQuestiosImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatchingGameQuestion_MatchingGameAnswer", Storage="_MatchingGameAnswers", ThisKey="pkMatchGameQuestionID", OtherKey="fkQuestionId")]
		public EntitySet<MatchingGameAnswer> MatchingGameAnswers
		{
			get
			{
				return this._MatchingGameAnswers;
			}
			set
			{
				this._MatchingGameAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatchingGame_MatchingGameQuestion", Storage="_MatchingGame", ThisKey="fkMatchGameId", OtherKey="pkMatchingGameID", IsForeignKey=true)]
		public MatchingGame MatchingGame
		{
			get
			{
				return this._MatchingGame.Entity;
			}
			set
			{
				MatchingGame previousValue = this._MatchingGame.Entity;
				if (((previousValue != value) 
							|| (this._MatchingGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatchingGame.Entity = null;
						previousValue.MatchingGameQuestions.Remove(this);
					}
					this._MatchingGame.Entity = value;
					if ((value != null))
					{
						value.MatchingGameQuestions.Add(this);
						this._fkMatchGameId = value.pkMatchingGameID;
					}
					else
					{
						this._fkMatchGameId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MatchingGame");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MatchingGameAnswers(MatchingGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.MatchingGameQuestion = this;
		}
		
		private void detach_MatchingGameAnswers(MatchingGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.MatchingGameQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.MatchingGameAnswer")]
	public partial class MatchingGameAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkMatchGameAnswerID;
		
		private string _AnswerText;
		
		private string _AnswerHTML;
		
		private System.Nullable<int> _fkQuestionId;
		
		private System.Nullable<int> _fkMatchGameId;
		
		private string _AnswerImage;
		
		private EntityRef<MatchingGameQuestion> _MatchingGameQuestion;
		
		private EntityRef<MatchingGame> _MatchingGame;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkMatchGameAnswerIDChanging(int value);
    partial void OnpkMatchGameAnswerIDChanged();
    partial void OnAnswerTextChanging(string value);
    partial void OnAnswerTextChanged();
    partial void OnAnswerHTMLChanging(string value);
    partial void OnAnswerHTMLChanged();
    partial void OnfkQuestionIdChanging(System.Nullable<int> value);
    partial void OnfkQuestionIdChanged();
    partial void OnfkMatchGameIdChanging(System.Nullable<int> value);
    partial void OnfkMatchGameIdChanged();
    partial void OnAnswerImageChanging(string value);
    partial void OnAnswerImageChanged();
    #endregion
		
		public MatchingGameAnswer()
		{
			this._MatchingGameQuestion = default(EntityRef<MatchingGameQuestion>);
			this._MatchingGame = default(EntityRef<MatchingGame>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkMatchGameAnswerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkMatchGameAnswerID
		{
			get
			{
				return this._pkMatchGameAnswerID;
			}
			set
			{
				if ((this._pkMatchGameAnswerID != value))
				{
					this.OnpkMatchGameAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._pkMatchGameAnswerID = value;
					this.SendPropertyChanged("pkMatchGameAnswerID");
					this.OnpkMatchGameAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(100)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this.OnAnswerTextChanging(value);
					this.SendPropertyChanging();
					this._AnswerText = value;
					this.SendPropertyChanged("AnswerText");
					this.OnAnswerTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerHTML", DbType="NVarChar(250)")]
		public string AnswerHTML
		{
			get
			{
				return this._AnswerHTML;
			}
			set
			{
				if ((this._AnswerHTML != value))
				{
					this.OnAnswerHTMLChanging(value);
					this.SendPropertyChanging();
					this._AnswerHTML = value;
					this.SendPropertyChanged("AnswerHTML");
					this.OnAnswerHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkQuestionId", DbType="Int")]
		public System.Nullable<int> fkQuestionId
		{
			get
			{
				return this._fkQuestionId;
			}
			set
			{
				if ((this._fkQuestionId != value))
				{
					if (this._MatchingGameQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._fkQuestionId = value;
					this.SendPropertyChanged("fkQuestionId");
					this.OnfkQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkMatchGameId", DbType="Int")]
		public System.Nullable<int> fkMatchGameId
		{
			get
			{
				return this._fkMatchGameId;
			}
			set
			{
				if ((this._fkMatchGameId != value))
				{
					if (this._MatchingGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkMatchGameIdChanging(value);
					this.SendPropertyChanging();
					this._fkMatchGameId = value;
					this.SendPropertyChanged("fkMatchGameId");
					this.OnfkMatchGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerImage", DbType="NVarChar(255)")]
		public string AnswerImage
		{
			get
			{
				return this._AnswerImage;
			}
			set
			{
				if ((this._AnswerImage != value))
				{
					this.OnAnswerImageChanging(value);
					this.SendPropertyChanging();
					this._AnswerImage = value;
					this.SendPropertyChanged("AnswerImage");
					this.OnAnswerImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatchingGameQuestion_MatchingGameAnswer", Storage="_MatchingGameQuestion", ThisKey="fkQuestionId", OtherKey="pkMatchGameQuestionID", IsForeignKey=true)]
		public MatchingGameQuestion MatchingGameQuestion
		{
			get
			{
				return this._MatchingGameQuestion.Entity;
			}
			set
			{
				MatchingGameQuestion previousValue = this._MatchingGameQuestion.Entity;
				if (((previousValue != value) 
							|| (this._MatchingGameQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatchingGameQuestion.Entity = null;
						previousValue.MatchingGameAnswers.Remove(this);
					}
					this._MatchingGameQuestion.Entity = value;
					if ((value != null))
					{
						value.MatchingGameAnswers.Add(this);
						this._fkQuestionId = value.pkMatchGameQuestionID;
					}
					else
					{
						this._fkQuestionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MatchingGameQuestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatchingGame_MatchingGameAnswer", Storage="_MatchingGame", ThisKey="fkMatchGameId", OtherKey="pkMatchingGameID", IsForeignKey=true)]
		public MatchingGame MatchingGame
		{
			get
			{
				return this._MatchingGame.Entity;
			}
			set
			{
				MatchingGame previousValue = this._MatchingGame.Entity;
				if (((previousValue != value) 
							|| (this._MatchingGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatchingGame.Entity = null;
						previousValue.MatchingGameAnswers.Remove(this);
					}
					this._MatchingGame.Entity = value;
					if ((value != null))
					{
						value.MatchingGameAnswers.Add(this);
						this._fkMatchGameId = value.pkMatchingGameID;
					}
					else
					{
						this._fkMatchGameId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MatchingGame");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.GroupToGameInter")]
	public partial class GroupToGameInter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkGameToGroupID;
		
		private System.Nullable<int> _fkGameId;
		
		private System.Nullable<int> _fkGroupId;
		
		private EntityRef<GameGroup> _GameGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkGameToGroupIDChanging(int value);
    partial void OnpkGameToGroupIDChanged();
    partial void OnfkGameIdChanging(System.Nullable<int> value);
    partial void OnfkGameIdChanged();
    partial void OnfkGroupIdChanging(System.Nullable<int> value);
    partial void OnfkGroupIdChanged();
    #endregion
		
		public GroupToGameInter()
		{
			this._GameGroup = default(EntityRef<GameGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkGameToGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkGameToGroupID
		{
			get
			{
				return this._pkGameToGroupID;
			}
			set
			{
				if ((this._pkGameToGroupID != value))
				{
					this.OnpkGameToGroupIDChanging(value);
					this.SendPropertyChanging();
					this._pkGameToGroupID = value;
					this.SendPropertyChanged("pkGameToGroupID");
					this.OnpkGameToGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkGameId", DbType="Int")]
		public System.Nullable<int> fkGameId
		{
			get
			{
				return this._fkGameId;
			}
			set
			{
				if ((this._fkGameId != value))
				{
					this.OnfkGameIdChanging(value);
					this.SendPropertyChanging();
					this._fkGameId = value;
					this.SendPropertyChanged("fkGameId");
					this.OnfkGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkGroupId", DbType="Int")]
		public System.Nullable<int> fkGroupId
		{
			get
			{
				return this._fkGroupId;
			}
			set
			{
				if ((this._fkGroupId != value))
				{
					if (this._GameGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkGroupIdChanging(value);
					this.SendPropertyChanging();
					this._fkGroupId = value;
					this.SendPropertyChanged("fkGroupId");
					this.OnfkGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameGroup_GroupToGameInter", Storage="_GameGroup", ThisKey="fkGroupId", OtherKey="pkGameGroupID", IsForeignKey=true)]
		public GameGroup GameGroup
		{
			get
			{
				return this._GameGroup.Entity;
			}
			set
			{
				GameGroup previousValue = this._GameGroup.Entity;
				if (((previousValue != value) 
							|| (this._GameGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameGroup.Entity = null;
						previousValue.GroupToGameInters.Remove(this);
					}
					this._GameGroup.Entity = value;
					if ((value != null))
					{
						value.GroupToGameInters.Add(this);
						this._fkGroupId = value.pkGameGroupID;
					}
					else
					{
						this._fkGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("GameGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.FindDifferenceGameAnswer")]
	public partial class FindDifferenceGameAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkDifferenceId;
		
		private int _fkGameId;
		
		private System.Nullable<int> _fkEditionId;
		
		private string _Text;
		
		private EntityRef<FindDifferenceGame> _FindDifferenceGame;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkDifferenceIdChanging(int value);
    partial void OnpkDifferenceIdChanged();
    partial void OnfkGameIdChanging(int value);
    partial void OnfkGameIdChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public FindDifferenceGameAnswer()
		{
			this._FindDifferenceGame = default(EntityRef<FindDifferenceGame>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkDifferenceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkDifferenceId
		{
			get
			{
				return this._pkDifferenceId;
			}
			set
			{
				if ((this._pkDifferenceId != value))
				{
					this.OnpkDifferenceIdChanging(value);
					this.SendPropertyChanging();
					this._pkDifferenceId = value;
					this.SendPropertyChanged("pkDifferenceId");
					this.OnpkDifferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkGameId", DbType="Int NOT NULL")]
		public int fkGameId
		{
			get
			{
				return this._fkGameId;
			}
			set
			{
				if ((this._fkGameId != value))
				{
					if (this._FindDifferenceGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkGameIdChanging(value);
					this.SendPropertyChanging();
					this._fkGameId = value;
					this.SendPropertyChanged("fkGameId");
					this.OnfkGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(50)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FindDifferenceGame_FindDifferenceGameAnswer", Storage="_FindDifferenceGame", ThisKey="fkGameId", OtherKey="pkFindDifferenceGameID", IsForeignKey=true)]
		public FindDifferenceGame FindDifferenceGame
		{
			get
			{
				return this._FindDifferenceGame.Entity;
			}
			set
			{
				FindDifferenceGame previousValue = this._FindDifferenceGame.Entity;
				if (((previousValue != value) 
							|| (this._FindDifferenceGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FindDifferenceGame.Entity = null;
						previousValue.FindDifferenceGameAnswers.Remove(this);
					}
					this._FindDifferenceGame.Entity = value;
					if ((value != null))
					{
						value.FindDifferenceGameAnswers.Add(this);
						this._fkGameId = value.pkFindDifferenceGameID;
					}
					else
					{
						this._fkGameId = default(int);
					}
					this.SendPropertyChanged("FindDifferenceGame");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.GameGroup")]
	public partial class GameGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkGameGroupID;
		
		private string _GroupHeader;
		
		private string _GroupImage;
		
		private System.Nullable<int> _fkGameTypeId;
		
		private System.Nullable<int> _fkEditionId;
		
		private System.Nullable<int> _fkGameMenuTypeId;
		
		private System.Nullable<int> _ItemsPerRow;
		
		private string _GroupDescription;
		
		private string _BackgroungImage;
		
		private string _BackgroundColor;
		
		private string _TitleStyle;
		
		private string _DescStyle;
		
		private EntitySet<GroupToGameInter> _GroupToGameInters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkGameGroupIDChanging(int value);
    partial void OnpkGameGroupIDChanged();
    partial void OnGroupHeaderChanging(string value);
    partial void OnGroupHeaderChanged();
    partial void OnGroupImageChanging(string value);
    partial void OnGroupImageChanged();
    partial void OnfkGameTypeIdChanging(System.Nullable<int> value);
    partial void OnfkGameTypeIdChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnfkGameMenuTypeIdChanging(System.Nullable<int> value);
    partial void OnfkGameMenuTypeIdChanged();
    partial void OnItemsPerRowChanging(System.Nullable<int> value);
    partial void OnItemsPerRowChanged();
    partial void OnGroupDescriptionChanging(string value);
    partial void OnGroupDescriptionChanged();
    partial void OnBackgroungImageChanging(string value);
    partial void OnBackgroungImageChanged();
    partial void OnBackgroundColorChanging(string value);
    partial void OnBackgroundColorChanged();
    partial void OnTitleStyleChanging(string value);
    partial void OnTitleStyleChanged();
    partial void OnDescStyleChanging(string value);
    partial void OnDescStyleChanged();
    #endregion
		
		public GameGroup()
		{
			this._GroupToGameInters = new EntitySet<GroupToGameInter>(new Action<GroupToGameInter>(this.attach_GroupToGameInters), new Action<GroupToGameInter>(this.detach_GroupToGameInters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkGameGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkGameGroupID
		{
			get
			{
				return this._pkGameGroupID;
			}
			set
			{
				if ((this._pkGameGroupID != value))
				{
					this.OnpkGameGroupIDChanging(value);
					this.SendPropertyChanging();
					this._pkGameGroupID = value;
					this.SendPropertyChanged("pkGameGroupID");
					this.OnpkGameGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupHeader", DbType="NVarChar(250)")]
		public string GroupHeader
		{
			get
			{
				return this._GroupHeader;
			}
			set
			{
				if ((this._GroupHeader != value))
				{
					this.OnGroupHeaderChanging(value);
					this.SendPropertyChanging();
					this._GroupHeader = value;
					this.SendPropertyChanged("GroupHeader");
					this.OnGroupHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupImage", DbType="NVarChar(250)")]
		public string GroupImage
		{
			get
			{
				return this._GroupImage;
			}
			set
			{
				if ((this._GroupImage != value))
				{
					this.OnGroupImageChanging(value);
					this.SendPropertyChanging();
					this._GroupImage = value;
					this.SendPropertyChanged("GroupImage");
					this.OnGroupImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkGameTypeId", DbType="Int")]
		public System.Nullable<int> fkGameTypeId
		{
			get
			{
				return this._fkGameTypeId;
			}
			set
			{
				if ((this._fkGameTypeId != value))
				{
					this.OnfkGameTypeIdChanging(value);
					this.SendPropertyChanging();
					this._fkGameTypeId = value;
					this.SendPropertyChanged("fkGameTypeId");
					this.OnfkGameTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkGameMenuTypeId", DbType="Int")]
		public System.Nullable<int> fkGameMenuTypeId
		{
			get
			{
				return this._fkGameMenuTypeId;
			}
			set
			{
				if ((this._fkGameMenuTypeId != value))
				{
					this.OnfkGameMenuTypeIdChanging(value);
					this.SendPropertyChanging();
					this._fkGameMenuTypeId = value;
					this.SendPropertyChanged("fkGameMenuTypeId");
					this.OnfkGameMenuTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsPerRow", DbType="Int")]
		public System.Nullable<int> ItemsPerRow
		{
			get
			{
				return this._ItemsPerRow;
			}
			set
			{
				if ((this._ItemsPerRow != value))
				{
					this.OnItemsPerRowChanging(value);
					this.SendPropertyChanging();
					this._ItemsPerRow = value;
					this.SendPropertyChanged("ItemsPerRow");
					this.OnItemsPerRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDescription", DbType="NVarChar(MAX)")]
		public string GroupDescription
		{
			get
			{
				return this._GroupDescription;
			}
			set
			{
				if ((this._GroupDescription != value))
				{
					this.OnGroupDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GroupDescription = value;
					this.SendPropertyChanged("GroupDescription");
					this.OnGroupDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroungImage", DbType="NVarChar(255)")]
		public string BackgroungImage
		{
			get
			{
				return this._BackgroungImage;
			}
			set
			{
				if ((this._BackgroungImage != value))
				{
					this.OnBackgroungImageChanging(value);
					this.SendPropertyChanging();
					this._BackgroungImage = value;
					this.SendPropertyChanged("BackgroungImage");
					this.OnBackgroungImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundColor", DbType="NVarChar(50)")]
		public string BackgroundColor
		{
			get
			{
				return this._BackgroundColor;
			}
			set
			{
				if ((this._BackgroundColor != value))
				{
					this.OnBackgroundColorChanging(value);
					this.SendPropertyChanging();
					this._BackgroundColor = value;
					this.SendPropertyChanged("BackgroundColor");
					this.OnBackgroundColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleStyle", DbType="NVarChar(255)")]
		public string TitleStyle
		{
			get
			{
				return this._TitleStyle;
			}
			set
			{
				if ((this._TitleStyle != value))
				{
					this.OnTitleStyleChanging(value);
					this.SendPropertyChanging();
					this._TitleStyle = value;
					this.SendPropertyChanged("TitleStyle");
					this.OnTitleStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescStyle", DbType="NVarChar(255)")]
		public string DescStyle
		{
			get
			{
				return this._DescStyle;
			}
			set
			{
				if ((this._DescStyle != value))
				{
					this.OnDescStyleChanging(value);
					this.SendPropertyChanging();
					this._DescStyle = value;
					this.SendPropertyChanged("DescStyle");
					this.OnDescStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameGroup_GroupToGameInter", Storage="_GroupToGameInters", ThisKey="pkGameGroupID", OtherKey="fkGroupId")]
		public EntitySet<GroupToGameInter> GroupToGameInters
		{
			get
			{
				return this._GroupToGameInters;
			}
			set
			{
				this._GroupToGameInters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupToGameInters(GroupToGameInter entity)
		{
			this.SendPropertyChanging();
			entity.GameGroup = this;
		}
		
		private void detach_GroupToGameInters(GroupToGameInter entity)
		{
			this.SendPropertyChanging();
			entity.GameGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.MatchingGame")]
	public partial class MatchingGame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkMatchingGameID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.DateTime> _PublishedOn;
		
		private System.Nullable<int> _fkEditionId;
		
		private string _QuestionsBG;
		
		private string _AnswersBG;
		
		private System.Nullable<int> _Direction;
		
		private string _QuestionsHeader;
		
		private string _QuestionsFooter;
		
		private string _QuestionsStyle;
		
		private string _AnswersHeader;
		
		private string _AnswersFooter;
		
		private string _AnswersStyle;
		
		private string _QuestionTblBG;
		
		private string _AnswerTblBG;
		
		private string _QuestionsLeft;
		
		private string _QuestionsRight;
		
		private string _QHStyle;
		
		private string _QFStyle;
		
		private string _AHStyle;
		
		private string _AFStyle;
		
		private string _QLStyle;
		
		private string _QRStyle;
		
		private string _ALStyle;
		
		private string _ARStyle;
		
		private string _AnswersLeft;
		
		private string _AnswersRight;
		
		private string _QContainerStyle;
		
		private string _AContainerStyle;
		
		private string _MainContainerStyle;
		
		private EntitySet<MatchingGameQuestion> _MatchingGameQuestions;
		
		private EntitySet<MatchingGameAnswer> _MatchingGameAnswers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkMatchingGameIDChanging(int value);
    partial void OnpkMatchingGameIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnPublishedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedOnChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnQuestionsBGChanging(string value);
    partial void OnQuestionsBGChanged();
    partial void OnAnswersBGChanging(string value);
    partial void OnAnswersBGChanged();
    partial void OnDirectionChanging(System.Nullable<int> value);
    partial void OnDirectionChanged();
    partial void OnQuestionsHeaderChanging(string value);
    partial void OnQuestionsHeaderChanged();
    partial void OnQuestionsFooterChanging(string value);
    partial void OnQuestionsFooterChanged();
    partial void OnQuestionsStyleChanging(string value);
    partial void OnQuestionsStyleChanged();
    partial void OnAnswersHeaderChanging(string value);
    partial void OnAnswersHeaderChanged();
    partial void OnAnswersFooterChanging(string value);
    partial void OnAnswersFooterChanged();
    partial void OnAnswersStyleChanging(string value);
    partial void OnAnswersStyleChanged();
    partial void OnQuestionTblBGChanging(string value);
    partial void OnQuestionTblBGChanged();
    partial void OnAnswerTblBGChanging(string value);
    partial void OnAnswerTblBGChanged();
    partial void OnQuestionsLeftChanging(string value);
    partial void OnQuestionsLeftChanged();
    partial void OnQuestionsRightChanging(string value);
    partial void OnQuestionsRightChanged();
    partial void OnQHStyleChanging(string value);
    partial void OnQHStyleChanged();
    partial void OnQFStyleChanging(string value);
    partial void OnQFStyleChanged();
    partial void OnAHStyleChanging(string value);
    partial void OnAHStyleChanged();
    partial void OnAFStyleChanging(string value);
    partial void OnAFStyleChanged();
    partial void OnQLStyleChanging(string value);
    partial void OnQLStyleChanged();
    partial void OnQRStyleChanging(string value);
    partial void OnQRStyleChanged();
    partial void OnALStyleChanging(string value);
    partial void OnALStyleChanged();
    partial void OnARStyleChanging(string value);
    partial void OnARStyleChanged();
    partial void OnAnswersLeftChanging(string value);
    partial void OnAnswersLeftChanged();
    partial void OnAnswersRightChanging(string value);
    partial void OnAnswersRightChanged();
    partial void OnQContainerStyleChanging(string value);
    partial void OnQContainerStyleChanged();
    partial void OnAContainerStyleChanging(string value);
    partial void OnAContainerStyleChanged();
    partial void OnMainContainerStyleChanging(string value);
    partial void OnMainContainerStyleChanged();
    #endregion
		
		public MatchingGame()
		{
			this._MatchingGameQuestions = new EntitySet<MatchingGameQuestion>(new Action<MatchingGameQuestion>(this.attach_MatchingGameQuestions), new Action<MatchingGameQuestion>(this.detach_MatchingGameQuestions));
			this._MatchingGameAnswers = new EntitySet<MatchingGameAnswer>(new Action<MatchingGameAnswer>(this.attach_MatchingGameAnswers), new Action<MatchingGameAnswer>(this.detach_MatchingGameAnswers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkMatchingGameID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkMatchingGameID
		{
			get
			{
				return this._pkMatchingGameID;
			}
			set
			{
				if ((this._pkMatchingGameID != value))
				{
					this.OnpkMatchingGameIDChanging(value);
					this.SendPropertyChanging();
					this._pkMatchingGameID = value;
					this.SendPropertyChanged("pkMatchingGameID");
					this.OnpkMatchingGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedOn
		{
			get
			{
				return this._PublishedOn;
			}
			set
			{
				if ((this._PublishedOn != value))
				{
					this.OnPublishedOnChanging(value);
					this.SendPropertyChanging();
					this._PublishedOn = value;
					this.SendPropertyChanged("PublishedOn");
					this.OnPublishedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionsBG", DbType="NVarChar(250)")]
		public string QuestionsBG
		{
			get
			{
				return this._QuestionsBG;
			}
			set
			{
				if ((this._QuestionsBG != value))
				{
					this.OnQuestionsBGChanging(value);
					this.SendPropertyChanging();
					this._QuestionsBG = value;
					this.SendPropertyChanged("QuestionsBG");
					this.OnQuestionsBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswersBG", DbType="NVarChar(250)")]
		public string AnswersBG
		{
			get
			{
				return this._AnswersBG;
			}
			set
			{
				if ((this._AnswersBG != value))
				{
					this.OnAnswersBGChanging(value);
					this.SendPropertyChanging();
					this._AnswersBG = value;
					this.SendPropertyChanged("AnswersBG");
					this.OnAnswersBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int")]
		public System.Nullable<int> Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionsHeader", DbType="NVarChar(255)")]
		public string QuestionsHeader
		{
			get
			{
				return this._QuestionsHeader;
			}
			set
			{
				if ((this._QuestionsHeader != value))
				{
					this.OnQuestionsHeaderChanging(value);
					this.SendPropertyChanging();
					this._QuestionsHeader = value;
					this.SendPropertyChanged("QuestionsHeader");
					this.OnQuestionsHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionsFooter", DbType="NVarChar(255)")]
		public string QuestionsFooter
		{
			get
			{
				return this._QuestionsFooter;
			}
			set
			{
				if ((this._QuestionsFooter != value))
				{
					this.OnQuestionsFooterChanging(value);
					this.SendPropertyChanging();
					this._QuestionsFooter = value;
					this.SendPropertyChanged("QuestionsFooter");
					this.OnQuestionsFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionsStyle", DbType="NVarChar(255)")]
		public string QuestionsStyle
		{
			get
			{
				return this._QuestionsStyle;
			}
			set
			{
				if ((this._QuestionsStyle != value))
				{
					this.OnQuestionsStyleChanging(value);
					this.SendPropertyChanging();
					this._QuestionsStyle = value;
					this.SendPropertyChanged("QuestionsStyle");
					this.OnQuestionsStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswersHeader", DbType="NVarChar(255)")]
		public string AnswersHeader
		{
			get
			{
				return this._AnswersHeader;
			}
			set
			{
				if ((this._AnswersHeader != value))
				{
					this.OnAnswersHeaderChanging(value);
					this.SendPropertyChanging();
					this._AnswersHeader = value;
					this.SendPropertyChanged("AnswersHeader");
					this.OnAnswersHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswersFooter", DbType="NVarChar(255)")]
		public string AnswersFooter
		{
			get
			{
				return this._AnswersFooter;
			}
			set
			{
				if ((this._AnswersFooter != value))
				{
					this.OnAnswersFooterChanging(value);
					this.SendPropertyChanging();
					this._AnswersFooter = value;
					this.SendPropertyChanged("AnswersFooter");
					this.OnAnswersFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswersStyle", DbType="NVarChar(255)")]
		public string AnswersStyle
		{
			get
			{
				return this._AnswersStyle;
			}
			set
			{
				if ((this._AnswersStyle != value))
				{
					this.OnAnswersStyleChanging(value);
					this.SendPropertyChanging();
					this._AnswersStyle = value;
					this.SendPropertyChanged("AnswersStyle");
					this.OnAnswersStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTblBG", DbType="NVarChar(255)")]
		public string QuestionTblBG
		{
			get
			{
				return this._QuestionTblBG;
			}
			set
			{
				if ((this._QuestionTblBG != value))
				{
					this.OnQuestionTblBGChanging(value);
					this.SendPropertyChanging();
					this._QuestionTblBG = value;
					this.SendPropertyChanged("QuestionTblBG");
					this.OnQuestionTblBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerTblBG", DbType="NVarChar(255)")]
		public string AnswerTblBG
		{
			get
			{
				return this._AnswerTblBG;
			}
			set
			{
				if ((this._AnswerTblBG != value))
				{
					this.OnAnswerTblBGChanging(value);
					this.SendPropertyChanging();
					this._AnswerTblBG = value;
					this.SendPropertyChanged("AnswerTblBG");
					this.OnAnswerTblBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionsLeft", DbType="NVarChar(255)")]
		public string QuestionsLeft
		{
			get
			{
				return this._QuestionsLeft;
			}
			set
			{
				if ((this._QuestionsLeft != value))
				{
					this.OnQuestionsLeftChanging(value);
					this.SendPropertyChanging();
					this._QuestionsLeft = value;
					this.SendPropertyChanged("QuestionsLeft");
					this.OnQuestionsLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionsRight", DbType="NVarChar(255)")]
		public string QuestionsRight
		{
			get
			{
				return this._QuestionsRight;
			}
			set
			{
				if ((this._QuestionsRight != value))
				{
					this.OnQuestionsRightChanging(value);
					this.SendPropertyChanging();
					this._QuestionsRight = value;
					this.SendPropertyChanged("QuestionsRight");
					this.OnQuestionsRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QHStyle", DbType="NVarChar(255)")]
		public string QHStyle
		{
			get
			{
				return this._QHStyle;
			}
			set
			{
				if ((this._QHStyle != value))
				{
					this.OnQHStyleChanging(value);
					this.SendPropertyChanging();
					this._QHStyle = value;
					this.SendPropertyChanged("QHStyle");
					this.OnQHStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QFStyle", DbType="NVarChar(255)")]
		public string QFStyle
		{
			get
			{
				return this._QFStyle;
			}
			set
			{
				if ((this._QFStyle != value))
				{
					this.OnQFStyleChanging(value);
					this.SendPropertyChanging();
					this._QFStyle = value;
					this.SendPropertyChanged("QFStyle");
					this.OnQFStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHStyle", DbType="NVarChar(255)")]
		public string AHStyle
		{
			get
			{
				return this._AHStyle;
			}
			set
			{
				if ((this._AHStyle != value))
				{
					this.OnAHStyleChanging(value);
					this.SendPropertyChanging();
					this._AHStyle = value;
					this.SendPropertyChanged("AHStyle");
					this.OnAHStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AFStyle", DbType="NVarChar(255)")]
		public string AFStyle
		{
			get
			{
				return this._AFStyle;
			}
			set
			{
				if ((this._AFStyle != value))
				{
					this.OnAFStyleChanging(value);
					this.SendPropertyChanging();
					this._AFStyle = value;
					this.SendPropertyChanged("AFStyle");
					this.OnAFStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QLStyle", DbType="NVarChar(255)")]
		public string QLStyle
		{
			get
			{
				return this._QLStyle;
			}
			set
			{
				if ((this._QLStyle != value))
				{
					this.OnQLStyleChanging(value);
					this.SendPropertyChanging();
					this._QLStyle = value;
					this.SendPropertyChanged("QLStyle");
					this.OnQLStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRStyle", DbType="NVarChar(255)")]
		public string QRStyle
		{
			get
			{
				return this._QRStyle;
			}
			set
			{
				if ((this._QRStyle != value))
				{
					this.OnQRStyleChanging(value);
					this.SendPropertyChanging();
					this._QRStyle = value;
					this.SendPropertyChanged("QRStyle");
					this.OnQRStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALStyle", DbType="NVarChar(255)")]
		public string ALStyle
		{
			get
			{
				return this._ALStyle;
			}
			set
			{
				if ((this._ALStyle != value))
				{
					this.OnALStyleChanging(value);
					this.SendPropertyChanging();
					this._ALStyle = value;
					this.SendPropertyChanged("ALStyle");
					this.OnALStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARStyle", DbType="NVarChar(255)")]
		public string ARStyle
		{
			get
			{
				return this._ARStyle;
			}
			set
			{
				if ((this._ARStyle != value))
				{
					this.OnARStyleChanging(value);
					this.SendPropertyChanging();
					this._ARStyle = value;
					this.SendPropertyChanged("ARStyle");
					this.OnARStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswersLeft", DbType="NVarChar(255)")]
		public string AnswersLeft
		{
			get
			{
				return this._AnswersLeft;
			}
			set
			{
				if ((this._AnswersLeft != value))
				{
					this.OnAnswersLeftChanging(value);
					this.SendPropertyChanging();
					this._AnswersLeft = value;
					this.SendPropertyChanged("AnswersLeft");
					this.OnAnswersLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswersRight", DbType="NVarChar(255)")]
		public string AnswersRight
		{
			get
			{
				return this._AnswersRight;
			}
			set
			{
				if ((this._AnswersRight != value))
				{
					this.OnAnswersRightChanging(value);
					this.SendPropertyChanging();
					this._AnswersRight = value;
					this.SendPropertyChanged("AnswersRight");
					this.OnAnswersRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QContainerStyle", DbType="NVarChar(255)")]
		public string QContainerStyle
		{
			get
			{
				return this._QContainerStyle;
			}
			set
			{
				if ((this._QContainerStyle != value))
				{
					this.OnQContainerStyleChanging(value);
					this.SendPropertyChanging();
					this._QContainerStyle = value;
					this.SendPropertyChanged("QContainerStyle");
					this.OnQContainerStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AContainerStyle", DbType="NVarChar(255)")]
		public string AContainerStyle
		{
			get
			{
				return this._AContainerStyle;
			}
			set
			{
				if ((this._AContainerStyle != value))
				{
					this.OnAContainerStyleChanging(value);
					this.SendPropertyChanging();
					this._AContainerStyle = value;
					this.SendPropertyChanged("AContainerStyle");
					this.OnAContainerStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainContainerStyle", DbType="NVarChar(255)")]
		public string MainContainerStyle
		{
			get
			{
				return this._MainContainerStyle;
			}
			set
			{
				if ((this._MainContainerStyle != value))
				{
					this.OnMainContainerStyleChanging(value);
					this.SendPropertyChanging();
					this._MainContainerStyle = value;
					this.SendPropertyChanged("MainContainerStyle");
					this.OnMainContainerStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatchingGame_MatchingGameQuestion", Storage="_MatchingGameQuestions", ThisKey="pkMatchingGameID", OtherKey="fkMatchGameId")]
		public EntitySet<MatchingGameQuestion> MatchingGameQuestions
		{
			get
			{
				return this._MatchingGameQuestions;
			}
			set
			{
				this._MatchingGameQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatchingGame_MatchingGameAnswer", Storage="_MatchingGameAnswers", ThisKey="pkMatchingGameID", OtherKey="fkMatchGameId")]
		public EntitySet<MatchingGameAnswer> MatchingGameAnswers
		{
			get
			{
				return this._MatchingGameAnswers;
			}
			set
			{
				this._MatchingGameAnswers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MatchingGameQuestions(MatchingGameQuestion entity)
		{
			this.SendPropertyChanging();
			entity.MatchingGame = this;
		}
		
		private void detach_MatchingGameQuestions(MatchingGameQuestion entity)
		{
			this.SendPropertyChanging();
			entity.MatchingGame = null;
		}
		
		private void attach_MatchingGameAnswers(MatchingGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.MatchingGame = this;
		}
		
		private void detach_MatchingGameAnswers(MatchingGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.MatchingGame = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PtitDbUser2015.FindDifferenceGame")]
	public partial class FindDifferenceGame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkFindDifferenceGameID;
		
		private string _Title;
		
		private string _Description;
		
		private string _Picture1;
		
		private string _Picture2;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<System.DateTime> _PublishedOn;
		
		private System.Nullable<int> _fkEditionId;
		
		private string _HTML1;
		
		private string _HTML2;
		
		private string _PictureAnswer;
		
		private EntitySet<FindDifferenceGameAnswer> _FindDifferenceGameAnswers;
		
		private EntityRef<MagazineEdition> _MagazineEdition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkFindDifferenceGameIDChanging(int value);
    partial void OnpkFindDifferenceGameIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPicture1Changing(string value);
    partial void OnPicture1Changed();
    partial void OnPicture2Changing(string value);
    partial void OnPicture2Changed();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnPublishedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedOnChanged();
    partial void OnfkEditionIdChanging(System.Nullable<int> value);
    partial void OnfkEditionIdChanged();
    partial void OnHTML1Changing(string value);
    partial void OnHTML1Changed();
    partial void OnHTML2Changing(string value);
    partial void OnHTML2Changed();
    partial void OnPictureAnswerChanging(string value);
    partial void OnPictureAnswerChanged();
    #endregion
		
		public FindDifferenceGame()
		{
			this._FindDifferenceGameAnswers = new EntitySet<FindDifferenceGameAnswer>(new Action<FindDifferenceGameAnswer>(this.attach_FindDifferenceGameAnswers), new Action<FindDifferenceGameAnswer>(this.detach_FindDifferenceGameAnswers));
			this._MagazineEdition = default(EntityRef<MagazineEdition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkFindDifferenceGameID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkFindDifferenceGameID
		{
			get
			{
				return this._pkFindDifferenceGameID;
			}
			set
			{
				if ((this._pkFindDifferenceGameID != value))
				{
					this.OnpkFindDifferenceGameIDChanging(value);
					this.SendPropertyChanging();
					this._pkFindDifferenceGameID = value;
					this.SendPropertyChanged("pkFindDifferenceGameID");
					this.OnpkFindDifferenceGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture1", DbType="NVarChar(255)")]
		public string Picture1
		{
			get
			{
				return this._Picture1;
			}
			set
			{
				if ((this._Picture1 != value))
				{
					this.OnPicture1Changing(value);
					this.SendPropertyChanging();
					this._Picture1 = value;
					this.SendPropertyChanged("Picture1");
					this.OnPicture1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture2", DbType="NVarChar(255)")]
		public string Picture2
		{
			get
			{
				return this._Picture2;
			}
			set
			{
				if ((this._Picture2 != value))
				{
					this.OnPicture2Changing(value);
					this.SendPropertyChanging();
					this._Picture2 = value;
					this.SendPropertyChanged("Picture2");
					this.OnPicture2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedOn
		{
			get
			{
				return this._PublishedOn;
			}
			set
			{
				if ((this._PublishedOn != value))
				{
					this.OnPublishedOnChanging(value);
					this.SendPropertyChanging();
					this._PublishedOn = value;
					this.SendPropertyChanged("PublishedOn");
					this.OnPublishedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkEditionId", DbType="Int")]
		public System.Nullable<int> fkEditionId
		{
			get
			{
				return this._fkEditionId;
			}
			set
			{
				if ((this._fkEditionId != value))
				{
					if (this._MagazineEdition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkEditionIdChanging(value);
					this.SendPropertyChanging();
					this._fkEditionId = value;
					this.SendPropertyChanged("fkEditionId");
					this.OnfkEditionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTML1", DbType="NVarChar(4000)")]
		public string HTML1
		{
			get
			{
				return this._HTML1;
			}
			set
			{
				if ((this._HTML1 != value))
				{
					this.OnHTML1Changing(value);
					this.SendPropertyChanging();
					this._HTML1 = value;
					this.SendPropertyChanged("HTML1");
					this.OnHTML1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTML2", DbType="NVarChar(4000)")]
		public string HTML2
		{
			get
			{
				return this._HTML2;
			}
			set
			{
				if ((this._HTML2 != value))
				{
					this.OnHTML2Changing(value);
					this.SendPropertyChanging();
					this._HTML2 = value;
					this.SendPropertyChanged("HTML2");
					this.OnHTML2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureAnswer", DbType="NVarChar(255)")]
		public string PictureAnswer
		{
			get
			{
				return this._PictureAnswer;
			}
			set
			{
				if ((this._PictureAnswer != value))
				{
					this.OnPictureAnswerChanging(value);
					this.SendPropertyChanging();
					this._PictureAnswer = value;
					this.SendPropertyChanged("PictureAnswer");
					this.OnPictureAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FindDifferenceGame_FindDifferenceGameAnswer", Storage="_FindDifferenceGameAnswers", ThisKey="pkFindDifferenceGameID", OtherKey="fkGameId")]
		public EntitySet<FindDifferenceGameAnswer> FindDifferenceGameAnswers
		{
			get
			{
				return this._FindDifferenceGameAnswers;
			}
			set
			{
				this._FindDifferenceGameAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MagazineEdition_FindDifferenceGame", Storage="_MagazineEdition", ThisKey="fkEditionId", OtherKey="pkEditionId", IsForeignKey=true)]
		public MagazineEdition MagazineEdition
		{
			get
			{
				return this._MagazineEdition.Entity;
			}
			set
			{
				MagazineEdition previousValue = this._MagazineEdition.Entity;
				if (((previousValue != value) 
							|| (this._MagazineEdition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MagazineEdition.Entity = null;
						previousValue.FindDifferenceGames.Remove(this);
					}
					this._MagazineEdition.Entity = value;
					if ((value != null))
					{
						value.FindDifferenceGames.Add(this);
						this._fkEditionId = value.pkEditionId;
					}
					else
					{
						this._fkEditionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MagazineEdition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FindDifferenceGameAnswers(FindDifferenceGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.FindDifferenceGame = this;
		}
		
		private void detach_FindDifferenceGameAnswers(FindDifferenceGameAnswer entity)
		{
			this.SendPropertyChanging();
			entity.FindDifferenceGame = null;
		}
	}
}
#pragma warning restore 1591
